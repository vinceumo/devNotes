<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sass on devNotes</title>
    <link>https://vinceumo.github.io/devNotes/Sass/</link>
    <description>Recent content in Sass on devNotes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 07 Nov 2018 13:21:02 +0000</lastBuildDate>
    
	<atom:link href="https://vinceumo.github.io/devNotes/Sass/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Responsive container classes with SCSS</title>
      <link>https://vinceumo.github.io/devNotes/Sass/responsive-container-classes-with-scss/</link>
      <pubDate>Thu, 22 Nov 2018 10:51:05 +0000</pubDate>
      
      <guid>https://vinceumo.github.io/devNotes/Sass/responsive-container-classes-with-scss/</guid>
      <description>SCSS input: @mixinmin($bp, $max: &amp;#34;null&amp;#34;, $device: &amp;#34;screen&amp;#34;) { @if $max == &amp;#34;null&amp;#34; { @media only #{$device} and (min-width: #{$bp}) { @content; } } @else { @media only #{$device} and (min-width: #{$bp}) and (max-width: #{$max}) { @content; } } } @function bp($bp) { @return map-get($breakpoints, $bp); } $breakpoints: ( na: 0px, // For BS grid xs: 320px, // Smartphone sm: 600px, // Tablets md: 900px, // Tablets Landscape and small desktops lg: 1200px, // Desktops xl: 1800px, // Large Desktop ); @function container($container-size, $true-val: false) { @return map-get($container-sizes, $container-size); } $container-sizes: ( sm: map-get($breakpoints, sm) - 30px, md: map-get($breakpoints, md) - 40px, lg: map-get($breakpoints, lg) - 50px, xl: map-get($breakpoints, xl) - 400px ); .</description>
    </item>
    
    <item>
      <title>Z-index management with SCSS</title>
      <link>https://vinceumo.github.io/devNotes/Sass/z-index-management-with-scss/</link>
      <pubDate>Mon, 19 Nov 2018 10:51:05 +0000</pubDate>
      
      <guid>https://vinceumo.github.io/devNotes/Sass/z-index-management-with-scss/</guid>
      <description>// Set our z-indexes map $z-indexes: ( &amp;#34;up-btn&amp;#34;, //60 &amp;#34;cookies-info&amp;#34;, //50 &amp;#34;left-nav&amp;#34;, //40 &amp;#34;footer&amp;#34;, //30 &amp;#34;top-nav&amp;#34;, //20 &amp;#34;content&amp;#34;, //10 ); // Z function return the z-index value @function z($name) { @if index($z-indexes, $name) { @return ((length($z-indexes) - index($z-indexes, $name)) + 1) * 10; } @else { @warn &amp;#39;There is no item &amp;#34;#{$name}&amp;#34; in this list; choose one of: #{$z-indexes}&amp;#39;; @return null; } } //------  .content { z-index: z(&amp;#34;content&amp;#34;); } .</description>
    </item>
    
    <item>
      <title>CSS custom properties (CSS variables) with SCSS</title>
      <link>https://vinceumo.github.io/devNotes/Sass/css-var-with-scss/</link>
      <pubDate>Wed, 25 Jul 2018 09:00:00 +0000</pubDate>
      
      <guid>https://vinceumo.github.io/devNotes/Sass/css-var-with-scss/</guid>
      <description>While working on my personal SCSS boilerplate, Atomic Bulldog. I wanted to implement a strict set of variables using maps. The goal is to create a consistent design system and to be able to use CSS variables for easy theming.
The base structure of my variable folder:
_aspect-ratios.scss _box-shadow.scss _breakpoints.scss _colors.scss _container-sizes.scss _font-families.scss _font-sizes.scss _grid.scss _root-classes.scss _spacers.scss _z-index.scss When looking on how to implement CSS variables in SASS, I found this great article, CSS4 Variables and Sass, from Jake Albaugh.</description>
    </item>
    
  </channel>
</rss>