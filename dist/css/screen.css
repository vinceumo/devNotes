/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/* Dracula Theme v1.2.5
 *
 * https://github.com/zenorocha/dracula-theme
 *
 * Copyright 2016, All rights reserved
 *
 * Code licensed under the MIT license
 * http://zenorocha.mit-license.org
 *
 * @author Rob G <wowmotty@gmail.com>
 * @author Chris Bracco <chris@cbracco.me>
 * @author Zeno Rocha <hi@zenorocha.com>
 * @author Piruin Panichphol <piruin.p@gmail.com>
 */
/*
 * Variables
 */
/*
 * Styles
 */
.highlight {
  background: #272935;
  color: #f8f8f2;
}

.highlight .hll,
.highlight .s,
.highlight .sa,
.highlight .sb,
.highlight .sc,
.highlight .dl,
.highlight .sd,
.highlight .s2,
.highlight .se,
.highlight .sh,
.highlight .si,
.highlight .sx,
.highlight .sr,
.highlight .s1,
.highlight .ss {
  color: #f1fa89;
}

.highlight .go {
  color: #44475a;
}

.highlight .err,
.highlight .g,
.highlight .l,
.highlight .n,
.highlight .x,
.highlight .p,
.highlight .ge,
.highlight .gr,
.highlight .gh,
.highlight .gi,
.highlight .gp,
.highlight .gs,
.highlight .gu,
.highlight .gt,
.highlight .ld,
.highlight .no,
.highlight .nd,
.highlight .ni,
.highlight .ne,
.highlight .nn,
.highlight .nx,
.highlight .py,
.highlight .w,
.highlight .bp {
  color: #f8f8f2;
}

.highlight .gh,
.highlight .gi,
.highlight .gu {
  font-weight: bold;
}

.highlight .ge {
  text-decoration: underline;
}

.highlight .bp {
  font-style: italic;
}

.highlight .c,
.highlight .ch,
.highlight .cm,
.highlight .cpf,
.highlight .c1,
.highlight .cs {
  color: #6071a4;
}

.highlight .kd,
.highlight .kt,
.highlight .nb,
.highlight .nl,
.highlight .nv,
.highlight .vc,
.highlight .vg,
.highlight .vi,
.highlight .vm {
  color: #8be8fd;
}

.highlight .kd,
.highlight .nb,
.highlight .nl,
.highlight .nv,
.highlight .vc,
.highlight .vg,
.highlight .vi,
.highlight .vm {
  font-style: italic;
}

.highlight .na,
.highlight .nc,
.highlight .nf,
.highlight .fm {
  color: #52fa7c;
}

.highlight .k,
.highlight .o,
.highlight .cp,
.highlight .kc,
.highlight .kn,
.highlight .kp,
.highlight .kr,
.highlight .nt,
.highlight .ow {
  color: #ff7ac6;
}

.highlight .m,
.highlight .mb,
.highlight .mf,
.highlight .mh,
.highlight .mi,
.highlight .mo,
.highlight .il {
  color: #bf95f9;
}

.highlight .gd {
  color: #ff5757;
}

:root {
  --color-black: hsl(0, 0%, 13%);
  --color-black--lighten: hsl(0, 0%, 50%);
  --color-primary: hsl(220, 85%, 52%);
  --color-primary--lighten: hsl(220, 85%, 85%);
  --color-white: hsl(0, 0%, 100%);
  --color-white--darken: hsl(0, 0%, 95%);
}

[data-theme="theme-default"] [data-toggle-theme="theme-default"] {
  display: none;
}

[data-theme="theme-dark"] {
  --color-primary: hsl(220, 85%, 75%);
  --color-black: hsl(0, 0%, 100%);
  --color-white: hsl(0, 0%, 13%);
  --color-white--darken: hsl(0, 0%, 18%);
  --color-primary--lighten: hsl(220, 85%, 42%);
}

[data-theme="theme-dark"] [data-toggle-theme="theme-dark"] {
  display: none;
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-primary: hsl(220, 85%, 75%);
    --color-black: hsl(0, 0%, 100%);
    --color-white: hsl(0, 0%, 13%);
    --color-white--darken: hsl(0, 0%, 18%);
    --color-primary--lighten: hsl(220, 85%, 42%);
  }
  [data-toggle-theme="theme-dark"] {
    display: none;
  }
}

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-size: 20px;
}

body {
  font-family: Asap, Helvetica Neue, Arial, sans-serif;
  color: var(--color-black);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  background-color: var(--color-white);
  line-height: 1.5;
}

.page-wrapper {
  max-width: 750px;
  width: 100%;
  padding: 1rem;
}

div.highlight {
  max-width: 100%;
  overflow-x: auto;
  background-color: #272935;
  padding-left: 1rem;
  padding-right: 1rem;
}

img {
  max-width: 100%;
  height: auto;
}

p code,
li code,
table code {
  background-color: var(--color-primary--lighten);
  padding: 0 0.2rem;
}

a {
  color: var(--color-primary);
}

button {
  background-color: var(--color-primary--lighten);
  color: var(--color-black);
  padding: 0.5rem 1rem;
  border: 0;
  cursor: pointer;
}

blockquote {
  font-style: italic;
  border-left: 6px solid var(--color-primary);
  margin-left: 0;
  padding-left: 1rem;
}

hr {
  border: 0;
  height: 1px;
  background-color: var(--color-black--lighten);
}

table {
  max-width: 100%;
  margin-bottom: 1rem;
}

table td,
table th {
  padding: 0.5rem;
}

table tbody tr:nth-child(even) {
  background: var(--color-white--darken);
}

table,
th,
td {
  border: 1px solid var(--color-black--lighten);
  border-collapse: collapse;
}

h1 {
  margin-top: 3.5rem;
}

h2 {
  margin-top: 3rem;
}

h3 {
  margin-top: 2rem;
}

.post-header .post-meta {
  font-style: italic;
  font-size: 0.8rem;
}

.page-header {
  border-bottom: 1px solid var(--color-black--lighten);
}

.page-header .site-title {
  font-size: 1.5rem;
  color: var(--color-black);
  text-decoration: none;
  font-weight: bold;
}

footer {
  text-align: center;
  border-top: 1px solid var(--color-black--lighten);
  margin-top: 2rem;
}

footer .links {
  list-style-type: none;
  margin: 0;
  padding: 0;
  padding-bottom: 2rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

footer .links > li {
  padding-right: 1rem;
  padding-bottom: 0.5rem;
}

footer .links > li:after {
  content: "|";
  padding-left: 1rem;
}

footer .links > li:nth-last-child(-n + 1) {
  padding-right: 0;
}

footer .links > li:nth-last-child(-n + 1):after {
  display: none;
}

.home h2 {
  margin-bottom: 0;
  font-size: 1.3rem;
}

.home ul {
  margin-top: 0;
}

.list-unstyled {
  list-style-type: none;
  padding-left: 0;
}

.list-unstyled > li {
  margin-bottom: 0.5rem;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9fbm9ybWFsaXplLnNjc3MiLCJzY3JlZW4uY3NzIiwidmVuZG9yL19oaWdobGlnaHQtdGhlbWUuc2NzcyIsInNjcmVlbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRFQUE0RTtBQUU1RTtnRkFDZ0Y7QUFFaEY7OztHQUdHO0FBRUY7RUFDQyxrQkFBaUI7RUFBRSxPQUFPO0VBQzFCLCtCQUE4QjtFQUFFLE9BQU87Q0FDeEM7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOztHQUVHO0FBRUg7RUFDRSxVQUFTO0NBQ1Y7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxlQUFjO0VBQ2QsaUJBQWdCO0NBQ2pCOztBQUVEO2dGQUNnRjtBQUVoRjs7O0dBR0c7QUFFSDtFQUNFLGdDQUF1QjtVQUF2Qix3QkFBdUI7RUFBRSxPQUFPO0VBQ2hDLFVBQVM7RUFBRSxPQUFPO0VBQ2xCLGtCQUFpQjtFQUFFLE9BQU87Q0FDM0I7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxrQ0FBaUM7RUFBRSxPQUFPO0VBQzFDLGVBQWM7RUFBRSxPQUFPO0NBQ3hCOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsOEJBQTZCO0NBQzlCOztBQUVEOzs7R0FHRztBQUVIO0VBQ0Usb0JBQW1CO0VBQUUsT0FBTztFQUM1QiwyQkFBMEI7RUFBRSxPQUFPO0VBQ25DLDBDQUFpQztVQUFqQyxrQ0FBaUM7RUFBRSxPQUFPO0NBQzNDOztBQUVEOztHQUVHO0FBRUg7O0VBRUUsb0JBQW1CO0NBQ3BCOztBQUVEOzs7R0FHRztBQUVIOzs7RUFHRSxrQ0FBaUM7RUFBRSxPQUFPO0VBQzFDLGVBQWM7RUFBRSxPQUFPO0NBQ3hCOztBQUVEOztHQUVHO0FBRUg7RUFDRSxlQUFjO0NBQ2Y7O0FBRUQ7OztHQUdHO0FBRUg7O0VBRUUsZUFBYztFQUNkLGVBQWM7RUFDZCxtQkFBa0I7RUFDbEIseUJBQXdCO0NBQ3pCOztBQUVEO0VBQ0UsZ0JBQWU7Q0FDaEI7O0FBRUQ7RUFDRSxZQUFXO0NB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O0NBQ2pCOztBQUVEO0VBQ0UsaUJBQWdCO0NBQ2pCOztBQUVEO0VBRUksbUJBQWtCO0VBQ2xCLGtCQUFpQjtDQUNsQjs7QUFHSDtFQVFFLHFEQWhJeUM7Q0FpSTFDOztBQVREO0VBRUksa0JBQWlCO0VBQ2pCLDBCQTVIc0I7RUE2SHRCLHNCQUFxQjtFQUNyQixrQkFBaUI7Q0FDbEI7O0FBS0g7RUFDRSxtQkFBa0I7RUFDbEIsa0RBckl5QztFQXNJekMsaUJBQWdCO0NBMkJqQjs7QUE5QkQ7RUFLSSxzQkFBcUI7RUFDckIsVUFBUztFQUNULFdBQVU7RUFDVixxQkFBb0I7RUFDcEIscUJBQWE7RUFBYixxQkFBYTtFQUFiLGNBQWE7RUFDYixvQkFBZTtNQUFmLGdCQUFlO0VBQ2YseUJBQXVCO01BQXZCLHNCQUF1QjtVQUF2Qix3QkFBdUI7Q0FrQnhCOztBQTdCSDtFQWNNLG9CQUFtQjtFQUNuQix1QkFBc0I7Q0FhdkI7O0FBNUJMO0VBa0JRLGFBQVk7RUFDWixtQkFBa0I7Q0FDbkI7O0FBcEJQO0VBdUJRLGlCQUFnQjtDQUlqQjs7QUEzQlA7RUF5QlUsY0FBYTtDQUNkOztBQU1UO0VBRUksaUJBQWdCO0VBQ2hCLGtCQUFpQjtDQUNsQjs7QUFKSDtFQU9JLGNBQWE7Q0FDZDs7QUFHSDtFQUNFLHNCQUFxQjtFQUNyQixnQkFBZTtDQUtoQjs7QUFQRDtFQUtJLHNCQUFxQjtDQUN0QiIsImZpbGUiOiJzY3JlZW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xyXG5cclxuLyogRG9jdW1lbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxyXG4gKi9cclxuXHJcbiBodG1sIHtcclxuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xyXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xyXG59XHJcblxyXG4vKiBTZWN0aW9uc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5ib2R5IHtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuaDEge1xyXG4gIGZvbnQtc2l6ZTogMmVtO1xyXG4gIG1hcmdpbjogMC42N2VtIDA7XHJcbn1cclxuXHJcbi8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICovXHJcblxyXG5ociB7XHJcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cclxuICBoZWlnaHQ6IDA7IC8qIDEgKi9cclxuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnByZSB7XHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXHJcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cclxufVxyXG5cclxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAqL1xyXG5cclxuYSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmFiYnJbdGl0bGVdIHtcclxuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYixcclxuc3Ryb25nIHtcclxuICBmb250LXdlaWdodDogYm9sZGVyO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmNvZGUsXHJcbmtiZCxcclxuc2FtcCB7XHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXHJcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnNtYWxsIHtcclxuICBmb250LXNpemU6IDgwJTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gKiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc3ViLFxyXG5zdXAge1xyXG4gIGZvbnQtc2l6ZTogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbnN1YiB7XHJcbiAgYm90dG9tOiAtMC4yNWVtO1xyXG59XHJcblxyXG5zdXAge1xyXG4gIHRvcDogLTAuNWVtO1xyXG59XHJcblxyXG4vKiBFbWJlZGRlZCBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cclxuICovXHJcblxyXG5pbWcge1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuLyogRm9ybXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaW5wdXQsXHJcbm9wdGdyb3VwLFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhIHtcclxuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xyXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXHJcbiAgbWFyZ2luOiAwOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0IHsgLyogMSAqL1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXHJcbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cclxuICovXHJcblxyXG5idXR0b24sXHJcbnNlbGVjdCB7IC8qIDEgKi9cclxuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5bdHlwZT1cImJ1dHRvblwiXSxcclxuW3R5cGU9XCJyZXNldFwiXSxcclxuW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXHJcblxyXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAqL1xyXG5cclxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xyXG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXHJcblxyXG5maWVsZHNldCB7XHJcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cclxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxyXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XHJcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmxlZ2VuZCB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXHJcbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cclxuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cclxuICBwYWRkaW5nOiAwOyAvKiAzICovXHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICovXHJcblxyXG5wcm9ncmVzcyB7XHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXHJcbiAqL1xyXG5cclxudGV4dGFyZWEge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXHJcbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cclxuICovXHJcblxyXG5bdHlwZT1cImNoZWNrYm94XCJdLFxyXG5bdHlwZT1cInJhZGlvXCJdIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXHJcbiAgcGFkZGluZzogMDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gKi9cclxuXHJcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxyXG4gKi9cclxuXHJcblt0eXBlPVwic2VhcmNoXCJdIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xyXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cclxuICovXHJcblxyXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xyXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cclxufVxyXG5cclxuLyogSW50ZXJhY3RpdmVcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuZGV0YWlscyB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5zdW1tYXJ5IHtcclxuICBkaXNwbGF5OiBsaXN0LWl0ZW07XHJcbn1cclxuXHJcbi8qIE1pc2NcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXHJcbiAqL1xyXG5cclxudGVtcGxhdGUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cclxuICovXHJcblxyXG5baGlkZGVuXSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXHJcbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cclxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxyXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxyXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxyXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxyXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cclxuICogYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxyXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxyXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxyXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXHJcbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqL1xuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxyXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXHJcbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcclxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovXG59XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxyXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXHJcbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxyXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXHJcbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cclxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxyXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cclxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cclxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cclxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxyXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxyXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogRHJhY3VsYSBUaGVtZSB2MS4yLjVcclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL3plbm9yb2NoYS9kcmFjdWxhLXRoZW1lXHJcbiAqXHJcbiAqIENvcHlyaWdodCAyMDE2LCBBbGwgcmlnaHRzIHJlc2VydmVkXHJcbiAqXHJcbiAqIENvZGUgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXHJcbiAqIGh0dHA6Ly96ZW5vcm9jaGEubWl0LWxpY2Vuc2Uub3JnXHJcbiAqXHJcbiAqIEBhdXRob3IgUm9iIEcgPHdvd21vdHR5QGdtYWlsLmNvbT5cclxuICogQGF1dGhvciBDaHJpcyBCcmFjY28gPGNocmlzQGNicmFjY28ubWU+XHJcbiAqIEBhdXRob3IgWmVubyBSb2NoYSA8aGlAemVub3JvY2hhLmNvbT5cclxuICogQGF1dGhvciBQaXJ1aW4gUGFuaWNocGhvbCA8cGlydWluLnBAZ21haWwuY29tPlxyXG4gKi9cbi8qXHJcbiAqIFZhcmlhYmxlc1xyXG4gKi9cbi8qXHJcbiAqIFN0eWxlc1xyXG4gKi9cbi5oaWdobGlnaHQge1xuICBiYWNrZ3JvdW5kOiAjMjcyOTM1O1xuICBjb2xvcjogI2Y4ZjhmMjtcbn1cblxuLmhpZ2hsaWdodCAuaGxsLFxuLmhpZ2hsaWdodCAucyxcbi5oaWdobGlnaHQgLnNhLFxuLmhpZ2hsaWdodCAuc2IsXG4uaGlnaGxpZ2h0IC5zYyxcbi5oaWdobGlnaHQgLmRsLFxuLmhpZ2hsaWdodCAuc2QsXG4uaGlnaGxpZ2h0IC5zMixcbi5oaWdobGlnaHQgLnNlLFxuLmhpZ2hsaWdodCAuc2gsXG4uaGlnaGxpZ2h0IC5zaSxcbi5oaWdobGlnaHQgLnN4LFxuLmhpZ2hsaWdodCAuc3IsXG4uaGlnaGxpZ2h0IC5zMSxcbi5oaWdobGlnaHQgLnNzIHtcbiAgY29sb3I6ICNmMWZhODk7XG59XG5cbi5oaWdobGlnaHQgLmdvIHtcbiAgY29sb3I6ICM0NDQ3NWE7XG59XG5cbi5oaWdobGlnaHQgLmVycixcbi5oaWdobGlnaHQgLmcsXG4uaGlnaGxpZ2h0IC5sLFxuLmhpZ2hsaWdodCAubixcbi5oaWdobGlnaHQgLngsXG4uaGlnaGxpZ2h0IC5wLFxuLmhpZ2hsaWdodCAuZ2UsXG4uaGlnaGxpZ2h0IC5ncixcbi5oaWdobGlnaHQgLmdoLFxuLmhpZ2hsaWdodCAuZ2ksXG4uaGlnaGxpZ2h0IC5ncCxcbi5oaWdobGlnaHQgLmdzLFxuLmhpZ2hsaWdodCAuZ3UsXG4uaGlnaGxpZ2h0IC5ndCxcbi5oaWdobGlnaHQgLmxkLFxuLmhpZ2hsaWdodCAubm8sXG4uaGlnaGxpZ2h0IC5uZCxcbi5oaWdobGlnaHQgLm5pLFxuLmhpZ2hsaWdodCAubmUsXG4uaGlnaGxpZ2h0IC5ubixcbi5oaWdobGlnaHQgLm54LFxuLmhpZ2hsaWdodCAucHksXG4uaGlnaGxpZ2h0IC53LFxuLmhpZ2hsaWdodCAuYnAge1xuICBjb2xvcjogI2Y4ZjhmMjtcbn1cblxuLmhpZ2hsaWdodCAuZ2gsXG4uaGlnaGxpZ2h0IC5naSxcbi5oaWdobGlnaHQgLmd1IHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5oaWdobGlnaHQgLmdlIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5oaWdobGlnaHQgLmJwIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4uaGlnaGxpZ2h0IC5jLFxuLmhpZ2hsaWdodCAuY2gsXG4uaGlnaGxpZ2h0IC5jbSxcbi5oaWdobGlnaHQgLmNwZixcbi5oaWdobGlnaHQgLmMxLFxuLmhpZ2hsaWdodCAuY3Mge1xuICBjb2xvcjogIzYwNzFhNDtcbn1cblxuLmhpZ2hsaWdodCAua2QsXG4uaGlnaGxpZ2h0IC5rdCxcbi5oaWdobGlnaHQgLm5iLFxuLmhpZ2hsaWdodCAubmwsXG4uaGlnaGxpZ2h0IC5udixcbi5oaWdobGlnaHQgLnZjLFxuLmhpZ2hsaWdodCAudmcsXG4uaGlnaGxpZ2h0IC52aSxcbi5oaWdobGlnaHQgLnZtIHtcbiAgY29sb3I6ICM4YmU4ZmQ7XG59XG5cbi5oaWdobGlnaHQgLmtkLFxuLmhpZ2hsaWdodCAubmIsXG4uaGlnaGxpZ2h0IC5ubCxcbi5oaWdobGlnaHQgLm52LFxuLmhpZ2hsaWdodCAudmMsXG4uaGlnaGxpZ2h0IC52Zyxcbi5oaWdobGlnaHQgLnZpLFxuLmhpZ2hsaWdodCAudm0ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi5oaWdobGlnaHQgLm5hLFxuLmhpZ2hsaWdodCAubmMsXG4uaGlnaGxpZ2h0IC5uZixcbi5oaWdobGlnaHQgLmZtIHtcbiAgY29sb3I6ICM1MmZhN2M7XG59XG5cbi5oaWdobGlnaHQgLmssXG4uaGlnaGxpZ2h0IC5vLFxuLmhpZ2hsaWdodCAuY3AsXG4uaGlnaGxpZ2h0IC5rYyxcbi5oaWdobGlnaHQgLmtuLFxuLmhpZ2hsaWdodCAua3AsXG4uaGlnaGxpZ2h0IC5rcixcbi5oaWdobGlnaHQgLm50LFxuLmhpZ2hsaWdodCAub3cge1xuICBjb2xvcjogI2ZmN2FjNjtcbn1cblxuLmhpZ2hsaWdodCAubSxcbi5oaWdobGlnaHQgLm1iLFxuLmhpZ2hsaWdodCAubWYsXG4uaGlnaGxpZ2h0IC5taCxcbi5oaWdobGlnaHQgLm1pLFxuLmhpZ2hsaWdodCAubW8sXG4uaGlnaGxpZ2h0IC5pbCB7XG4gIGNvbG9yOiAjYmY5NWY5O1xufVxuXG4uaGlnaGxpZ2h0IC5nZCB7XG4gIGNvbG9yOiAjZmY1NzU3O1xufVxuXG46cm9vdCB7XG4gIC0tY29sb3ItYmxhY2s6IGhzbCgwLCAwJSwgMTMlKTtcbiAgLS1jb2xvci1ibGFjay0tbGlnaHRlbjogaHNsKDAsIDAlLCA1MCUpO1xuICAtLWNvbG9yLXByaW1hcnk6IGhzbCgyMjAsIDg1JSwgNTIlKTtcbiAgLS1jb2xvci1wcmltYXJ5LS1saWdodGVuOiBoc2woMjIwLCA4NSUsIDg1JSk7XG4gIC0tY29sb3Itd2hpdGU6IGhzbCgwLCAwJSwgMTAwJSk7XG4gIC0tY29sb3Itd2hpdGUtLWRhcmtlbjogaHNsKDAsIDAlLCA5NSUpO1xufVxuXG5bZGF0YS10aGVtZT1cInRoZW1lLWRlZmF1bHRcIl0gW2RhdGEtdG9nZ2xlLXRoZW1lPVwidGhlbWUtZGVmYXVsdFwiXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbltkYXRhLXRoZW1lPVwidGhlbWUtZGFya1wiXSB7XG4gIC0tY29sb3ItcHJpbWFyeTogaHNsKDIyMCwgODUlLCA3NSUpO1xuICAtLWNvbG9yLWJsYWNrOiBoc2woMCwgMCUsIDEwMCUpO1xuICAtLWNvbG9yLXdoaXRlOiBoc2woMCwgMCUsIDEzJSk7XG4gIC0tY29sb3Itd2hpdGUtLWRhcmtlbjogaHNsKDAsIDAlLCAxOCUpO1xuICAtLWNvbG9yLXByaW1hcnktLWxpZ2h0ZW46IGhzbCgyMjAsIDg1JSwgNDIlKTtcbn1cblxuW2RhdGEtdGhlbWU9XCJ0aGVtZS1kYXJrXCJdIFtkYXRhLXRvZ2dsZS10aGVtZT1cInRoZW1lLWRhcmtcIl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSB7XG4gIDpyb290IHtcbiAgICAtLWNvbG9yLXByaW1hcnk6IGhzbCgyMjAsIDg1JSwgNzUlKTtcbiAgICAtLWNvbG9yLWJsYWNrOiBoc2woMCwgMCUsIDEwMCUpO1xuICAgIC0tY29sb3Itd2hpdGU6IGhzbCgwLCAwJSwgMTMlKTtcbiAgICAtLWNvbG9yLXdoaXRlLS1kYXJrZW46IGhzbCgwLCAwJSwgMTglKTtcbiAgICAtLWNvbG9yLXByaW1hcnktLWxpZ2h0ZW46IGhzbCgyMjAsIDg1JSwgNDIlKTtcbiAgfVxuICBbZGF0YS10b2dnbGUtdGhlbWU9XCJ0aGVtZS1kYXJrXCJdIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IEFzYXAsIEhlbHZldGljYSBOZXVlLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgY29sb3I6IHZhcigtLWNvbG9yLWJsYWNrKTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLnBhZ2Utd3JhcHBlciB7XG4gIG1heC13aWR0aDogNzUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxcmVtO1xufVxuXG5kaXYuaGlnaGxpZ2h0IHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjcyOTM1O1xuICBwYWRkaW5nLWxlZnQ6IDFyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDFyZW07XG59XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5wIGNvZGUsXG5saSBjb2RlLFxudGFibGUgY29kZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXByaW1hcnktLWxpZ2h0ZW4pO1xuICBwYWRkaW5nOiAwIDAuMnJlbTtcbn1cblxuYSB7XG4gIGNvbG9yOiB2YXIoLS1jb2xvci1wcmltYXJ5KTtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItcHJpbWFyeS0tbGlnaHRlbik7XG4gIGNvbG9yOiB2YXIoLS1jb2xvci1ibGFjayk7XG4gIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xuICBib3JkZXI6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuYmxvY2txdW90ZSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgYm9yZGVyLWxlZnQ6IDZweCBzb2xpZCB2YXIoLS1jb2xvci1wcmltYXJ5KTtcbiAgbWFyZ2luLWxlZnQ6IDA7XG4gIHBhZGRpbmctbGVmdDogMXJlbTtcbn1cblxuaHIge1xuICBib3JkZXI6IDA7XG4gIGhlaWdodDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1ibGFjay0tbGlnaHRlbik7XG59XG5cbnRhYmxlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG50YWJsZSB0ZCxcbnRhYmxlIHRoIHtcbiAgcGFkZGluZzogMC41cmVtO1xufVxuXG50YWJsZSB0Ym9keSB0cjpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci13aGl0ZS0tZGFya2VuKTtcbn1cblxudGFibGUsXG50aCxcbnRkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tY29sb3ItYmxhY2stLWxpZ2h0ZW4pO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuXG5oMSB7XG4gIG1hcmdpbi10b3A6IDMuNXJlbTtcbn1cblxuaDIge1xuICBtYXJnaW4tdG9wOiAzcmVtO1xufVxuXG5oMyB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG59XG5cbi5wb3N0LWhlYWRlciAucG9zdC1tZXRhIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXNpemU6IDAuOHJlbTtcbn1cblxuLnBhZ2UtaGVhZGVyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWNvbG9yLWJsYWNrLS1saWdodGVuKTtcbn1cblxuLnBhZ2UtaGVhZGVyIC5zaXRlLXRpdGxlIHtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGNvbG9yOiB2YXIoLS1jb2xvci1ibGFjayk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbmZvb3RlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLWNvbG9yLWJsYWNrLS1saWdodGVuKTtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbn1cblxuZm9vdGVyIC5saW5rcyB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuZm9vdGVyIC5saW5rcyA+IGxpIHtcbiAgcGFkZGluZy1yaWdodDogMXJlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNXJlbTtcbn1cblxuZm9vdGVyIC5saW5rcyA+IGxpOmFmdGVyIHtcbiAgY29udGVudDogXCJ8XCI7XG4gIHBhZGRpbmctbGVmdDogMXJlbTtcbn1cblxuZm9vdGVyIC5saW5rcyA+IGxpOm50aC1sYXN0LWNoaWxkKC1uICsgMSkge1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xufVxuXG5mb290ZXIgLmxpbmtzID4gbGk6bnRoLWxhc3QtY2hpbGQoLW4gKyAxKTphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5ob21lIGgyIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgZm9udC1zaXplOiAxLjNyZW07XG59XG5cbi5ob21lIHVsIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLmxpc3QtdW5zdHlsZWQge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmctbGVmdDogMDtcbn1cblxuLmxpc3QtdW5zdHlsZWQgPiBsaSB7XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbn1cbiIsIi8qIERyYWN1bGEgVGhlbWUgdjEuMi41XHJcbiAqXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5vcm9jaGEvZHJhY3VsYS10aGVtZVxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgMjAxNiwgQWxsIHJpZ2h0cyByZXNlcnZlZFxyXG4gKlxyXG4gKiBDb2RlIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxyXG4gKiBodHRwOi8vemVub3JvY2hhLm1pdC1saWNlbnNlLm9yZ1xyXG4gKlxyXG4gKiBAYXV0aG9yIFJvYiBHIDx3b3dtb3R0eUBnbWFpbC5jb20+XHJcbiAqIEBhdXRob3IgQ2hyaXMgQnJhY2NvIDxjaHJpc0BjYnJhY2NvLm1lPlxyXG4gKiBAYXV0aG9yIFplbm8gUm9jaGEgPGhpQHplbm9yb2NoYS5jb20+XHJcbiAqIEBhdXRob3IgUGlydWluIFBhbmljaHBob2wgPHBpcnVpbi5wQGdtYWlsLmNvbT5cclxuICovXHJcblxyXG4vKlxyXG4gKiBWYXJpYWJsZXNcclxuICovXHJcblxyXG4kZHQtZ3JheS1kYXJrOiBoc2woMjMxLCAxNSUsIDE4JSk7IC8vIEJhY2tncm91bmRcclxuJGR0LWdyYXk6IGhzbCgyMzIsIDE0JSwgMzElKTsgLy8gQ3VycmVudCBMaW5lICYgU2VsZWN0aW9uXHJcbiRkdC1ncmF5LWxpZ2h0OiBoc2woNjAsIDMwJSwgOTYlKTsgLy8gRm9yZWdyb3VuZFxyXG4kZHQtYmx1ZTogaHNsKDIyNSwgMjclLCA1MSUpOyAvLyBDb21tZW50XHJcbiRkdC1jeWFuOiBoc2woMTkxLCA5NyUsIDc3JSk7XHJcbiRkdC1ncmVlbjogaHNsKDEzNSwgOTQlLCA2NSUpO1xyXG4kZHQtb3JhbmdlOiBoc2woMzEsIDEwMCUsIDcxJSk7XHJcbiRkdC1waW5rOiBoc2woMzI2LCAxMDAlLCA3NCUpO1xyXG4kZHQtcHVycGxlOiBoc2woMjY1LCA4OSUsIDc4JSk7XHJcbiRkdC1yZWQ6IGhzbCgwLCAxMDAlLCA2NyUpO1xyXG4kZHQteWVsbG93OiBoc2woNjUsIDkyJSwgNzYlKTtcclxuXHJcbi8qXHJcbiAqIFN0eWxlc1xyXG4gKi9cclxuXHJcbi5oaWdobGlnaHQge1xyXG4gIGJhY2tncm91bmQ6ICRkdC1ncmF5LWRhcms7XHJcbiAgY29sb3I6ICRkdC1ncmF5LWxpZ2h0O1xyXG5cclxuICAuaGxsLFxyXG4gIC5zLFxyXG4gIC5zYSxcclxuICAuc2IsXHJcbiAgLnNjLFxyXG4gIC5kbCxcclxuICAuc2QsXHJcbiAgLnMyLFxyXG4gIC5zZSxcclxuICAuc2gsXHJcbiAgLnNpLFxyXG4gIC5zeCxcclxuICAuc3IsXHJcbiAgLnMxLFxyXG4gIC5zcyB7XHJcbiAgICBjb2xvcjogJGR0LXllbGxvdztcclxuICB9XHJcblxyXG4gIC5nbyB7XHJcbiAgICBjb2xvcjogJGR0LWdyYXk7XHJcbiAgfVxyXG5cclxuICAuZXJyLFxyXG4gIC5nLFxyXG4gIC5sLFxyXG4gIC5uLFxyXG4gIC54LFxyXG4gIC5wLFxyXG4gIC5nZSxcclxuICAuZ3IsXHJcbiAgLmdoLFxyXG4gIC5naSxcclxuICAuZ3AsXHJcbiAgLmdzLFxyXG4gIC5ndSxcclxuICAuZ3QsXHJcbiAgLmxkLFxyXG4gIC5ubyxcclxuICAubmQsXHJcbiAgLm5pLFxyXG4gIC5uZSxcclxuICAubm4sXHJcbiAgLm54LFxyXG4gIC5weSxcclxuICAudyxcclxuICAuYnAge1xyXG4gICAgY29sb3I6ICRkdC1ncmF5LWxpZ2h0O1xyXG4gIH1cclxuXHJcbiAgLmdoLFxyXG4gIC5naSxcclxuICAuZ3Uge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG5cclxuICAuZ2Uge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgfVxyXG5cclxuICAuYnAge1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gIH1cclxuXHJcbiAgLmMsXHJcbiAgLmNoLFxyXG4gIC5jbSxcclxuICAuY3BmLFxyXG4gIC5jMSxcclxuICAuY3Mge1xyXG4gICAgY29sb3I6ICRkdC1ibHVlO1xyXG4gIH1cclxuXHJcbiAgLmtkLFxyXG4gIC5rdCxcclxuICAubmIsXHJcbiAgLm5sLFxyXG4gIC5udixcclxuICAudmMsXHJcbiAgLnZnLFxyXG4gIC52aSxcclxuICAudm0ge1xyXG4gICAgY29sb3I6ICRkdC1jeWFuO1xyXG4gIH1cclxuXHJcbiAgLmtkLFxyXG4gIC5uYixcclxuICAubmwsXHJcbiAgLm52LFxyXG4gIC52YyxcclxuICAudmcsXHJcbiAgLnZpLFxyXG4gIC52bSB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgfVxyXG5cclxuICAubmEsXHJcbiAgLm5jLFxyXG4gIC5uZixcclxuICAuZm0ge1xyXG4gICAgY29sb3I6ICRkdC1ncmVlbjtcclxuICB9XHJcblxyXG4gIC5rLFxyXG4gIC5vLFxyXG4gIC5jcCxcclxuICAua2MsXHJcbiAgLmtuLFxyXG4gIC5rcCxcclxuICAua3IsXHJcbiAgLm50LFxyXG4gIC5vdyB7XHJcbiAgICBjb2xvcjogJGR0LXBpbms7XHJcbiAgfVxyXG5cclxuICAubSxcclxuICAubWIsXHJcbiAgLm1mLFxyXG4gIC5taCxcclxuICAubWksXHJcbiAgLm1vLFxyXG4gIC5pbCB7XHJcbiAgICBjb2xvcjogJGR0LXB1cnBsZTtcclxuICB9XHJcblxyXG4gIC5nZCB7XHJcbiAgICBjb2xvcjogJGR0LXJlZDtcclxuICB9XHJcbn1cclxuIiwiQGltcG9ydCBcInZlbmRvci9ub3JtYWxpemVcIjtcclxuQGltcG9ydCBcInZlbmRvci9oaWdobGlnaHQtdGhlbWVcIjtcclxuXHJcbjpyb290IHtcclxuICAtLWNvbG9yLWJsYWNrOiBoc2woMCwgMCUsIDEzJSk7XHJcbiAgLS1jb2xvci1ibGFjay0tbGlnaHRlbjogaHNsKDAsIDAlLCA1MCUpO1xyXG4gIC0tY29sb3ItcHJpbWFyeTogaHNsKDIyMCwgODUlLCA1MiUpO1xyXG4gIC0tY29sb3ItcHJpbWFyeS0tbGlnaHRlbjogaHNsKDIyMCwgODUlLCA4NSUpO1xyXG4gIC0tY29sb3Itd2hpdGU6IGhzbCgwLCAwJSwgMTAwJSk7XHJcbiAgLS1jb2xvci13aGl0ZS0tZGFya2VuOiBoc2woMCwgMCUsIDk1JSk7XHJcbn1cclxuXHJcbltkYXRhLXRoZW1lPVwidGhlbWUtZGVmYXVsdFwiXSB7XHJcbiAgW2RhdGEtdG9nZ2xlLXRoZW1lPVwidGhlbWUtZGVmYXVsdFwiXSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuW2RhdGEtdGhlbWU9XCJ0aGVtZS1kYXJrXCJdIHtcclxuICAtLWNvbG9yLXByaW1hcnk6IGhzbCgyMjAsIDg1JSwgNzUlKTtcclxuICAtLWNvbG9yLWJsYWNrOiBoc2woMCwgMCUsIDEwMCUpO1xyXG4gIC0tY29sb3Itd2hpdGU6IGhzbCgwLCAwJSwgMTMlKTtcclxuICAtLWNvbG9yLXdoaXRlLS1kYXJrZW46IGhzbCgwLCAwJSwgMTglKTtcclxuICAtLWNvbG9yLXByaW1hcnktLWxpZ2h0ZW46IGhzbCgyMjAsIDg1JSwgNDIlKTtcclxuXHJcbiAgW2RhdGEtdG9nZ2xlLXRoZW1lPVwidGhlbWUtZGFya1wiXSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaykge1xyXG4gIDpyb290IHtcclxuICAgIC0tY29sb3ItcHJpbWFyeTogaHNsKDIyMCwgODUlLCA3NSUpO1xyXG4gICAgLS1jb2xvci1ibGFjazogaHNsKDAsIDAlLCAxMDAlKTtcclxuICAgIC0tY29sb3Itd2hpdGU6IGhzbCgwLCAwJSwgMTMlKTtcclxuICAgIC0tY29sb3Itd2hpdGUtLWRhcmtlbjogaHNsKDAsIDAlLCAxOCUpO1xyXG4gICAgLS1jb2xvci1wcmltYXJ5LS1saWdodGVuOiBoc2woMjIwLCA4NSUsIDQyJSk7XHJcbiAgfVxyXG5cclxuICBbZGF0YS10b2dnbGUtdGhlbWU9XCJ0aGVtZS1kYXJrXCJdIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG4kYmxhY2s6IHZhcigtLWNvbG9yLWJsYWNrKTtcclxuJGJsYWNrLWxpZ2h0ZW46IHZhcigtLWNvbG9yLWJsYWNrLS1saWdodGVuKTtcclxuJHByaW1hcnk6IHZhcigtLWNvbG9yLXByaW1hcnkpO1xyXG4kcHJpbWFyeS1saWdodGVuOiB2YXIoLS1jb2xvci1wcmltYXJ5LS1saWdodGVuKTtcclxuJHdoaXRlOiB2YXIoLS1jb2xvci13aGl0ZSk7XHJcbiR3aGl0ZS1kYXJrZW46IHZhcigtLWNvbG9yLXdoaXRlLS1kYXJrZW4pO1xyXG5cclxuKixcclxuKjpiZWZvcmUsXHJcbio6YWZ0ZXIge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgZm9udC1mYW1pbHk6IEFzYXAsIEhlbHZldGljYSBOZXVlLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICBjb2xvcjogJGJsYWNrO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbn1cclxuXHJcbi5wYWdlLXdyYXBwZXIge1xyXG4gIG1heC13aWR0aDogNzUwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMXJlbTtcclxufVxyXG5cclxuZGl2LmhpZ2hsaWdodCB7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG92ZXJmbG93LXg6IGF1dG87XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogaHNsKDIzMSwgMTUlLCAxOCUpOyAvL1RvIGZpdCBoaWdobGlnaHQgdGhlbWUgZm9yIG5vd1xyXG4gIHBhZGRpbmctbGVmdDogMXJlbTtcclxuICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xyXG59XHJcblxyXG5pbWcge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbnAgY29kZSxcclxubGkgY29kZSxcclxudGFibGUgY29kZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktbGlnaHRlbjtcclxuICBwYWRkaW5nOiAwIDAuMnJlbTtcclxufVxyXG5cclxuYSB7XHJcbiAgY29sb3I6ICRwcmltYXJ5O1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWxpZ2h0ZW47XHJcbiAgY29sb3I6ICRibGFjaztcclxuICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcclxuICBib3JkZXI6IDA7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5ibG9ja3F1b3RlIHtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgYm9yZGVyLWxlZnQ6IDZweCBzb2xpZCAkcHJpbWFyeTtcclxuICBtYXJnaW4tbGVmdDogMDtcclxuICBwYWRkaW5nLWxlZnQ6IDFyZW07XHJcbn1cclxuXHJcbmhyIHtcclxuICBib3JkZXI6IDA7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrLWxpZ2h0ZW47XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuXHJcbiAgdGQsXHJcbiAgdGgge1xyXG4gICAgcGFkZGluZzogMC41cmVtO1xyXG4gIH1cclxuXHJcbiAgdGJvZHkge1xyXG4gICAgdHIge1xyXG4gICAgICAmOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlLWRhcmtlbjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxudGFibGUsXHJcbnRoLFxyXG50ZCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgJGJsYWNrLWxpZ2h0ZW47XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxufVxyXG5cclxuaDEge1xyXG4gIG1hcmdpbi10b3A6IDMuNXJlbTtcclxufVxyXG5cclxuaDIge1xyXG4gIG1hcmdpbi10b3A6IDNyZW07XHJcbn1cclxuXHJcbmgzIHtcclxuICBtYXJnaW4tdG9wOiAycmVtO1xyXG59XHJcblxyXG4ucG9zdC1oZWFkZXIge1xyXG4gIC5wb3N0LW1ldGEge1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgZm9udC1zaXplOiAwLjhyZW07XHJcbiAgfVxyXG59XHJcblxyXG4ucGFnZS1oZWFkZXIge1xyXG4gIC5zaXRlLXRpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gICAgY29sb3I6ICRibGFjaztcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuXHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRibGFjay1saWdodGVuO1xyXG59XHJcblxyXG5mb290ZXIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBib3JkZXItdG9wOiAxcHggc29saWQgJGJsYWNrLWxpZ2h0ZW47XHJcbiAgbWFyZ2luLXRvcDogMnJlbTtcclxuICAubGlua3Mge1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAycmVtO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cclxuICAgICYgPiBsaSB7XHJcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDFyZW07XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwLjVyZW07XHJcblxyXG4gICAgICAmOmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcInxcIjtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDFyZW07XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6bnRoLWxhc3QtY2hpbGQoLW4gKyAxKSB7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMDtcclxuICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uaG9tZSB7XHJcbiAgaDIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xyXG4gIH1cclxuXHJcbiAgdWwge1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICB9XHJcbn1cclxuXHJcbi5saXN0LXVuc3R5bGVkIHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgcGFkZGluZy1sZWZ0OiAwO1xyXG5cclxuICA+IGxpIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcclxuICB9XHJcbn1cclxuIl19 */
