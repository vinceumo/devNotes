/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

.highlight pre {
  background-color: #2b2b2b;
  color: #ffffff;
}

.highlight .hll {
  background-color: #2b2b2b;
}

.highlight .c {
  color: #d4d0ab;
}

/* Comment */
.highlight .err {
  color: #ffa07a;
  background-color: #1e0010;
}

/* Error */
.highlight .k {
  color: #00e0e0;
}

/* Keyword */
.highlight .l {
  color: #ae81ff;
}

/* Literal */
.highlight .n {
  color: #fefefe;
}

/* Name */
.highlight .o {
  color: #f92672;
}

/* Operator */
.highlight .p {
  color: #fefefe;
}

/* Punctuation */
.highlight .cm {
  color: #d4d0ab;
}

/* Comment.Multiline */
.highlight .cp {
  color: #d4d0ab;
}

/* Comment.Preproc */
.highlight .c1 {
  color: #d4d0ab;
}

/* Comment.Single */
.highlight .cs {
  color: #d4d0ab;
}

/* Comment.Special */
.highlight .ge {
  font-style: italic;
}

/* Generic.Emph */
.highlight .gs {
  font-weight: bold;
}

/* Generic.Strong */
.highlight .kc {
  color: #ffa07a;
}

/* Keyword.Constant */
.highlight .kd {
  color: #00e0e0;
}

/* Keyword.Declaration */
.highlight .kn {
  color: #f92672;
}

/* Keyword.Namespace */
.highlight .kp {
  color: #00e0e0;
}

/* Keyword.Pseudo */
.highlight .kr {
  color: #00e0e0;
}

/* Keyword.Reserved */
.highlight .kt {
  color: #00e0e0;
}

/* Keyword.Type */
.highlight .ld {
  color: #ffd700;
}

/* Literal.Date */
.highlight .m {
  color: #ae81ff;
}

/* Literal.Number */
.highlight .s {
  color: #ffd700;
}

/* Literal.String */
.highlight .na {
  color: #ffd700;
}

/* Name.Attribute */
.highlight .nb {
  color: #fefefe;
}

/* Name.Builtin */
.highlight .nc {
  color: #ffd700;
}

/* Name.Class */
.highlight .no {
  color: #00e0e0;
}

/* Name.Constant */
.highlight .nd {
  color: #ffd700;
}

/* Name.Decorator */
.highlight .ni {
  color: #fefefe;
}

/* Name.Entity */
.highlight .ne {
  color: #ffd700;
}

/* Name.Exception */
.highlight .nf {
  color: #ffd700;
}

/* Name.Function */
.highlight .nl {
  color: #fefefe;
}

/* Name.Label */
.highlight .nn {
  color: #fefefe;
}

/* Name.Namespace */
.highlight .nx {
  color: #ffd700;
}

/* Name.Other */
.highlight .py {
  color: #ffa07a;
}

/* Name.Property */
.highlight .nt {
  color: #f92672;
}

/* Name.Tag */
.highlight .nv {
  color: #ffa07a;
}

/* Name.Variable */
.highlight .ow {
  color: #f92672;
}

/* Operator.Word */
.highlight .w {
  color: #fefefe;
}

/* Text.Whitespace */
.highlight .mf {
  color: #ae81ff;
}

/* Literal.Number.Float */
.highlight .mh {
  color: #ae81ff;
}

/* Literal.Number.Hex */
.highlight .mi {
  color: #ae81ff;
}

/* Literal.Number.Integer */
.highlight .mo {
  color: #ae81ff;
}

/* Literal.Number.Oct */
.highlight .sb {
  color: #abe338;
}

/* Literal.String.Backtick */
.highlight .sc {
  color: #abe338;
}

/* Literal.String.Char */
.highlight .sd {
  color: #abe338;
}

/* Literal.String.Doc */
.highlight .s2 {
  color: #abe338;
}

/* Literal.String.Double */
.highlight .se {
  color: #ae81ff;
}

/* Literal.String.Escape */
.highlight .sh {
  color: #abe338;
}

/* Literal.String.Heredoc */
.highlight .si {
  color: #abe338;
}

/* Literal.String.Interpol */
.highlight .sx {
  color: #abe338;
}

/* Literal.String.Other */
.highlight .sr {
  color: #abe338;
}

/* Literal.String.Regex */
.highlight .s1 {
  color: #abe338;
}

/* Literal.String.Single */
.highlight .ss {
  color: #ffa07a;
}

/* Literal.String.Symbol */
.highlight .bp {
  color: #fefefe;
}

/* Name.Builtin.Pseudo */
.highlight .vc {
  color: #fefefe;
}

/* Name.Variable.Class */
.highlight .vg {
  color: #fefefe;
}

/* Name.Variable.Global */
.highlight .vi {
  color: #fefefe;
}

/* Name.Variable.Instance */
.highlight .il {
  color: #ae81ff;
}

/* Literal.Number.Integer.Long */
/* Generic Heading & Diff Header */
.highlight .gu {
  color: #d4d0ab;
}

/* Generic.Subheading & Diff Unified/Comment? */
.highlight .gd {
  color: #ffa07a;
}

/* Generic.Deleted & Diff Deleted */
.highlight .gi {
  color: #ffd700;
}

/* Generic.Inserted & Diff Inserted */
:root {
  --color-black: hsl(0, 0%, 13%);
  --color-black--lighten: hsl(0, 0%, 50%);
  --color-primary: hsl(41, 85%, 52%);
  --color-primary--lighten: hsl(41, 85%, 85%);
  --color-white: hsl(0, 0%, 100%);
  --color-white--darken: hsl(0, 0%, 95%);
}

[data-theme="theme-default"] [data-toggle-theme="theme-default"] {
  display: none;
}

[data-theme="theme-dark"] {
  --color-black: hsl(0, 0%, 100%);
  --color-white: hsl(0, 0%, 13%);
  --color-white--darken: hsl(0, 0%, 18%);
  --color-primary--lighten: hsl(41, 85%, 40%);
}

[data-theme="theme-dark"] [data-toggle-theme="theme-dark"] {
  display: none;
}

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-size: 18px;
}

body {
  font-family: Sans-Serif;
  color: var(--color-black);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  background-color: var(--color-white);
  line-height: 1.5;
}

.page-wrapper {
  max-width: 750px;
  width: 100%;
  padding: 1rem;
}

div.highlight {
  max-width: 100%;
  overflow-x: auto;
  background-color: #2b2b2b;
  padding-left: 1rem;
  padding-right: 1rem;
}

img {
  max-width: 100%;
  height: auto;
}

p code,
li code,
table code {
  background-color: var(--color-primary--lighten);
  padding: 0 0.2rem;
}

a {
  color: var(--color-primary);
}

button {
  background-color: var(--color-primary);
  padding: 0.5rem 1rem;
  border: 0;
  cursor: pointer;
}

blockquote {
  font-style: italic;
  border-left: 6px solid var(--color-primary);
  margin-left: 0;
  padding-left: 1rem;
}

hr {
  border: 0;
  height: 1px;
  background-color: var(--color-black--lighten);
}

table {
  max-width: 100%;
  margin-bottom: 1rem;
}

table td,
table th {
  padding: 0.5rem;
}

table tbody tr:nth-child(even) {
  background: var(--color-white--darken);
}

table,
th,
td {
  border: 1px solid var(--color-black--lighten);
  border-collapse: collapse;
}

.post-header .post-meta {
  font-style: italic;
  font-size: 0.8rem;
}

.page-header {
  border-bottom: 1px solid var(--color-black--lighten);
}

.page-header .site-title {
  font-size: 1.5rem;
  color: var(--color-black);
  text-decoration: none;
  font-weight: bold;
}

footer {
  text-align: center;
  border-top: 1px solid var(--color-black--lighten);
  margin-top: 2rem;
}

footer .links {
  list-style-type: none;
  margin: 0;
  padding: 0;
  padding-bottom: 2rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

footer .links > li {
  padding-right: 1rem;
  padding-bottom: 0.5rem;
}

footer .links > li:after {
  content: "|";
  padding-left: 1rem;
}

footer .links > li:nth-last-child(-n + 1) {
  padding-right: 0;
}

footer .links > li:nth-last-child(-n + 1):after {
  display: none;
}

.home h2 {
  margin-bottom: 0;
  font-size: 1.3rem;
}

.home ul {
  margin-top: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
