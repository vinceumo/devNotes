/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

.highlight pre {
  background-color: #2b2b2b;
  color: #ffffff;
}

.highlight .hll {
  background-color: #2b2b2b;
}

.highlight .c {
  color: #d4d0ab;
}

/* Comment */
.highlight .err {
  color: #ffa07a;
  background-color: #1e0010;
}

/* Error */
.highlight .k {
  color: #00e0e0;
}

/* Keyword */
.highlight .l {
  color: #ae81ff;
}

/* Literal */
.highlight .n {
  color: #fefefe;
}

/* Name */
.highlight .o {
  color: #f92672;
}

/* Operator */
.highlight .p {
  color: #fefefe;
}

/* Punctuation */
.highlight .cm {
  color: #d4d0ab;
}

/* Comment.Multiline */
.highlight .cp {
  color: #d4d0ab;
}

/* Comment.Preproc */
.highlight .c1 {
  color: #d4d0ab;
}

/* Comment.Single */
.highlight .cs {
  color: #d4d0ab;
}

/* Comment.Special */
.highlight .ge {
  font-style: italic;
}

/* Generic.Emph */
.highlight .gs {
  font-weight: bold;
}

/* Generic.Strong */
.highlight .kc {
  color: #ffa07a;
}

/* Keyword.Constant */
.highlight .kd {
  color: #00e0e0;
}

/* Keyword.Declaration */
.highlight .kn {
  color: #f92672;
}

/* Keyword.Namespace */
.highlight .kp {
  color: #00e0e0;
}

/* Keyword.Pseudo */
.highlight .kr {
  color: #00e0e0;
}

/* Keyword.Reserved */
.highlight .kt {
  color: #00e0e0;
}

/* Keyword.Type */
.highlight .ld {
  color: #ffd700;
}

/* Literal.Date */
.highlight .m {
  color: #ae81ff;
}

/* Literal.Number */
.highlight .s {
  color: #ffd700;
}

/* Literal.String */
.highlight .na {
  color: #ffd700;
}

/* Name.Attribute */
.highlight .nb {
  color: #fefefe;
}

/* Name.Builtin */
.highlight .nc {
  color: #ffd700;
}

/* Name.Class */
.highlight .no {
  color: #00e0e0;
}

/* Name.Constant */
.highlight .nd {
  color: #ffd700;
}

/* Name.Decorator */
.highlight .ni {
  color: #fefefe;
}

/* Name.Entity */
.highlight .ne {
  color: #ffd700;
}

/* Name.Exception */
.highlight .nf {
  color: #ffd700;
}

/* Name.Function */
.highlight .nl {
  color: #fefefe;
}

/* Name.Label */
.highlight .nn {
  color: #fefefe;
}

/* Name.Namespace */
.highlight .nx {
  color: #ffd700;
}

/* Name.Other */
.highlight .py {
  color: #ffa07a;
}

/* Name.Property */
.highlight .nt {
  color: #f92672;
}

/* Name.Tag */
.highlight .nv {
  color: #ffa07a;
}

/* Name.Variable */
.highlight .ow {
  color: #f92672;
}

/* Operator.Word */
.highlight .w {
  color: #fefefe;
}

/* Text.Whitespace */
.highlight .mf {
  color: #ae81ff;
}

/* Literal.Number.Float */
.highlight .mh {
  color: #ae81ff;
}

/* Literal.Number.Hex */
.highlight .mi {
  color: #ae81ff;
}

/* Literal.Number.Integer */
.highlight .mo {
  color: #ae81ff;
}

/* Literal.Number.Oct */
.highlight .sb {
  color: #abe338;
}

/* Literal.String.Backtick */
.highlight .sc {
  color: #abe338;
}

/* Literal.String.Char */
.highlight .sd {
  color: #abe338;
}

/* Literal.String.Doc */
.highlight .s2 {
  color: #abe338;
}

/* Literal.String.Double */
.highlight .se {
  color: #ae81ff;
}

/* Literal.String.Escape */
.highlight .sh {
  color: #abe338;
}

/* Literal.String.Heredoc */
.highlight .si {
  color: #abe338;
}

/* Literal.String.Interpol */
.highlight .sx {
  color: #abe338;
}

/* Literal.String.Other */
.highlight .sr {
  color: #abe338;
}

/* Literal.String.Regex */
.highlight .s1 {
  color: #abe338;
}

/* Literal.String.Single */
.highlight .ss {
  color: #ffa07a;
}

/* Literal.String.Symbol */
.highlight .bp {
  color: #fefefe;
}

/* Name.Builtin.Pseudo */
.highlight .vc {
  color: #fefefe;
}

/* Name.Variable.Class */
.highlight .vg {
  color: #fefefe;
}

/* Name.Variable.Global */
.highlight .vi {
  color: #fefefe;
}

/* Name.Variable.Instance */
.highlight .il {
  color: #ae81ff;
}

/* Literal.Number.Integer.Long */
/* Generic Heading & Diff Header */
.highlight .gu {
  color: #d4d0ab;
}

/* Generic.Subheading & Diff Unified/Comment? */
.highlight .gd {
  color: #ffa07a;
}

/* Generic.Deleted & Diff Deleted */
.highlight .gi {
  color: #ffd700;
}

/* Generic.Inserted & Diff Inserted */
:root {
  --color-black: hsl(0, 0%, 13%);
  --color-black--lighten: hsl(0, 0%, 50%);
  --color-primary: hsl(41, 85%, 52%);
  --color-primary--lighten: hsl(41, 85%, 85%);
  --color-white: hsl(0, 0%, 100%);
  --color-white--darken: hsl(0, 0%, 95%);
}

[data-theme="theme-default"] [data-toggle-theme="theme-default"] {
  display: none;
}

[data-theme="theme-dark"] {
  --color-black: hsl(0, 0%, 100%);
  --color-white: hsl(0, 0%, 13%);
  --color-white--darken: hsl(0, 0%, 18%);
  --color-primary--lighten: hsl(41, 85%, 40%);
}

[data-theme="theme-dark"] [data-toggle-theme="theme-dark"] {
  display: none;
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-black: hsl(0, 0%, 100%);
    --color-white: hsl(0, 0%, 13%);
    --color-white--darken: hsl(0, 0%, 18%);
    --color-primary--lighten: hsl(41, 85%, 40%);
  }
  [data-toggle-theme="theme-dark"] {
    display: none;
  }
}

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-size: 18px;
}

body {
  font-family: Sans-Serif;
  color: var(--color-black);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  background-color: var(--color-white);
  line-height: 1.5;
}

.page-wrapper {
  max-width: 750px;
  width: 100%;
  padding: 1rem;
}

div.highlight {
  max-width: 100%;
  overflow-x: auto;
  background-color: #2b2b2b;
  padding-left: 1rem;
  padding-right: 1rem;
}

img {
  max-width: 100%;
  height: auto;
}

p code,
li code,
table code {
  background-color: var(--color-primary--lighten);
  padding: 0 0.2rem;
}

a {
  color: var(--color-primary);
}

button {
  background-color: var(--color-primary);
  padding: 0.5rem 1rem;
  border: 0;
  cursor: pointer;
}

blockquote {
  font-style: italic;
  border-left: 6px solid var(--color-primary);
  margin-left: 0;
  padding-left: 1rem;
}

hr {
  border: 0;
  height: 1px;
  background-color: var(--color-black--lighten);
}

table {
  max-width: 100%;
  margin-bottom: 1rem;
}

table td,
table th {
  padding: 0.5rem;
}

table tbody tr:nth-child(even) {
  background: var(--color-white--darken);
}

table,
th,
td {
  border: 1px solid var(--color-black--lighten);
  border-collapse: collapse;
}

.post-header .post-meta {
  font-style: italic;
  font-size: 0.8rem;
}

.page-header {
  border-bottom: 1px solid var(--color-black--lighten);
}

.page-header .site-title {
  font-size: 1.5rem;
  color: var(--color-black);
  text-decoration: none;
  font-weight: bold;
}

footer {
  text-align: center;
  border-top: 1px solid var(--color-black--lighten);
  margin-top: 2rem;
}

footer .links {
  list-style-type: none;
  margin: 0;
  padding: 0;
  padding-bottom: 2rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

footer .links > li {
  padding-right: 1rem;
  padding-bottom: 0.5rem;
}

footer .links > li:after {
  content: "|";
  padding-left: 1rem;
}

footer .links > li:nth-last-child(-n + 1) {
  padding-right: 0;
}

footer .links > li:nth-last-child(-n + 1):after {
  display: none;
}

.home h2 {
  margin-bottom: 0;
  font-size: 1.3rem;
}

.home ul {
  margin-top: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9fbm9ybWFsaXplLnNjc3MiLCJzY3JlZW4uY3NzIiwidmVuZG9yL19oaWdobGlnaHQtdGhlbWUuc2NzcyIsInNjcmVlbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRFQUE0RTtBQUU1RTtnRkFDZ0Y7QUFFaEY7OztHQUdHO0FBRUY7RUFDQyxrQkFBaUI7RUFBRSxPQUFPO0VBQzFCLCtCQUE4QjtFQUFFLE9BQU87Q0FDeEM7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOztHQUVHO0FBRUg7RUFDRSxVQUFTO0NBQ1Y7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxlQUFjO0VBQ2QsaUJBQWdCO0NBQ2pCOztBQUVEO2dGQUNnRjtBQUVoRjs7O0dBR0c7QUFFSDtFQUNFLGdDQUF1QjtVQUF2Qix3QkFBdUI7RUFBRSxPQUFPO0VBQ2hDLFVBQVM7RUFBRSxPQUFPO0VBQ2xCLGtCQUFpQjtFQUFFLE9BQU87Q0FDM0I7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxrQ0FBaUM7RUFBRSxPQUFPO0VBQzFDLGVBQWM7RUFBRSxPQUFPO0NBQ3hCOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsOEJBQTZCO0NBQzlCOztBQUVEOzs7R0FHRztBQUVIO0VBQ0Usb0JBQW1CO0VBQUUsT0FBTztFQUM1QiwyQkFBMEI7RUFBRSxPQUFPO0VBQ25DLDBDQUFpQztVQUFqQyxrQ0FBaUM7RUFBRSxPQUFPO0NBQzNDOztBQUVEOztHQUVHO0FBRUg7O0VBRUUsb0JBQW1CO0NBQ3BCOztBQUVEOzs7R0FHRztBQUVIOzs7RUFHRSxrQ0FBaUM7RUFBRSxPQUFPO0VBQzFDLGVBQWM7RUFBRSxPQUFPO0NBQ3hCOztBQUVEOztHQUVHO0FBRUg7RUFDRSxlQUFjO0NBQ2Y7O0FBRUQ7OztHQUdHO0FBRUg7O0VBRUUsZUFBYztFQUNkLGVBQWM7RUFDZCxtQkFBa0I7RUFDbEIseUJBQXdCO0NBQ3pCOztBQUVEO0VBQ0UsZ0JBQWU7Q0FDaEI7O0FBRUQ7RUFDRSxZQUFXO0NB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QUFnQjtDQTJCakI7O0FBOUJEO0VBS0ksc0JBQXFCO0VBQ3JCLFVBQVM7RUFDVCxXQUFVO0VBQ1YscUJBQW9CO0VBQ3BCLHFCQUFhO0VBQWIscUJBQWE7RUFBYixjQUFhO0VBQ2Isb0JBQWU7TUFBZixnQkFBZTtFQUNmLHlCQUF1QjtNQUF2QixzQkFBdUI7VUFBdkIsd0JBQXVCO0NBa0J4Qjs7QUE3Qkg7RUFjTSxvQkFBbUI7RUFDbkIsdUJBQXNCO0NBYXZCOztBQTVCTDtFQWtCUSxhQUFZO0VBQ1osbUJBQWtCO0NBQ25COztBQXBCUDtFQXVCUSxpQkFBZ0I7Q0FJakI7O0FBM0JQO0VBeUJVLGNBQWE7Q0FDZDs7QUFNVDtFQUVJLGlCQUFnQjtFQUNoQixrQkFBaUI7Q0FDbEI7O0FBSkg7RUFPSSxjQUFhO0NBQ2QiLCJmaWxlIjoic2NyZWVuLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cclxuXHJcbi8qIERvY3VtZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cclxuICovXHJcblxyXG4gaHRtbCB7XHJcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cclxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cclxufVxyXG5cclxuLyogU2VjdGlvbnNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuYm9keSB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxyXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmgxIHtcclxuICBmb250LXNpemU6IDJlbTtcclxuICBtYXJnaW46IDAuNjdlbSAwO1xyXG59XHJcblxyXG4vKiBHcm91cGluZyBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAqL1xyXG5cclxuaHIge1xyXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXHJcbiAgaGVpZ2h0OiAwOyAvKiAxICovXHJcbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5wcmUge1xyXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXHJcbn1cclxuXHJcbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxyXG4gKi9cclxuXHJcbmEge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5hYmJyW3RpdGxlXSB7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xyXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmIsXHJcbnN0cm9uZyB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5jb2RlLFxyXG5rYmQsXHJcbnNhbXAge1xyXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5zbWFsbCB7XHJcbiAgZm9udC1zaXplOiA4MCU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cclxuICogYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnN1Yixcclxuc3VwIHtcclxuICBmb250LXNpemU6IDc1JTtcclxuICBsaW5lLWhlaWdodDogMDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG5zdWIge1xyXG4gIGJvdHRvbTogLTAuMjVlbTtcclxufVxyXG5cclxuc3VwIHtcclxuICB0b3A6IC0wLjVlbTtcclxufVxyXG5cclxuLyogRW1iZWRkZWQgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXHJcbiAqL1xyXG5cclxuaW1nIHtcclxuICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbi8qIEZvcm1zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5vcHRncm91cCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cclxuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cclxuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xyXG4gIG1hcmdpbjogMDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCB7IC8qIDEgKi9cclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5zZWxlY3QgeyAvKiAxICovXHJcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuW3R5cGU9XCJidXR0b25cIl0sXHJcblt0eXBlPVwicmVzZXRcIl0sXHJcblt0eXBlPVwic3VibWl0XCJdIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gKi9cclxuXHJcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcclxuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuZmllbGRzZXQge1xyXG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cclxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5sZWdlbmQge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xyXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXHJcbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXHJcbiAgcGFkZGluZzogMDsgLyogMyAqL1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAqL1xyXG5cclxucHJvZ3Jlc3Mge1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxyXG4gKi9cclxuXHJcbnRleHRhcmVhIHtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxyXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJjaGVja2JveFwiXSxcclxuW3R5cGU9XCJyYWRpb1wiXSB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cclxuICovXHJcblxyXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICovXHJcblxyXG5bdHlwZT1cInNlYXJjaFwiXSB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cclxuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxyXG4gKi9cclxuXHJcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cclxuICBmb250OiBpbmhlcml0OyAvKiAyICovXHJcbn1cclxuXHJcbi8qIEludGVyYWN0aXZlXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxyXG4gKi9cclxuXHJcbmRldGFpbHMge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc3VtbWFyeSB7XHJcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xyXG59XHJcblxyXG4vKiBNaXNjXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxyXG4gKi9cclxuXHJcbnRlbXBsYXRlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXHJcbiAqL1xyXG5cclxuW2hpZGRlbl0ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxyXG4gKi9cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcclxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cclxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cclxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovXG59XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovXG59XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcclxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXHJcbiAqIGFsbCBicm93c2Vycy5cclxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cclxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cclxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxyXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cclxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cclxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxyXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKi9cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xufVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cclxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxyXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XHJcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqL1xufVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxyXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cclxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxyXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXHJcbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovXG59XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXHJcbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXHJcbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogTWlzY1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cclxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cclxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oaWdobGlnaHQgcHJlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJiMmIyYjtcbiAgY29sb3I6ICNmZmZmZmY7XG59XG5cbi5oaWdobGlnaHQgLmhsbCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYjJiMmI7XG59XG5cbi5oaWdobGlnaHQgLmMge1xuICBjb2xvcjogI2Q0ZDBhYjtcbn1cblxuLyogQ29tbWVudCAqL1xuLmhpZ2hsaWdodCAuZXJyIHtcbiAgY29sb3I6ICNmZmEwN2E7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZTAwMTA7XG59XG5cbi8qIEVycm9yICovXG4uaGlnaGxpZ2h0IC5rIHtcbiAgY29sb3I6ICMwMGUwZTA7XG59XG5cbi8qIEtleXdvcmQgKi9cbi5oaWdobGlnaHQgLmwge1xuICBjb2xvcjogI2FlODFmZjtcbn1cblxuLyogTGl0ZXJhbCAqL1xuLmhpZ2hsaWdodCAubiB7XG4gIGNvbG9yOiAjZmVmZWZlO1xufVxuXG4vKiBOYW1lICovXG4uaGlnaGxpZ2h0IC5vIHtcbiAgY29sb3I6ICNmOTI2NzI7XG59XG5cbi8qIE9wZXJhdG9yICovXG4uaGlnaGxpZ2h0IC5wIHtcbiAgY29sb3I6ICNmZWZlZmU7XG59XG5cbi8qIFB1bmN0dWF0aW9uICovXG4uaGlnaGxpZ2h0IC5jbSB7XG4gIGNvbG9yOiAjZDRkMGFiO1xufVxuXG4vKiBDb21tZW50Lk11bHRpbGluZSAqL1xuLmhpZ2hsaWdodCAuY3Age1xuICBjb2xvcjogI2Q0ZDBhYjtcbn1cblxuLyogQ29tbWVudC5QcmVwcm9jICovXG4uaGlnaGxpZ2h0IC5jMSB7XG4gIGNvbG9yOiAjZDRkMGFiO1xufVxuXG4vKiBDb21tZW50LlNpbmdsZSAqL1xuLmhpZ2hsaWdodCAuY3Mge1xuICBjb2xvcjogI2Q0ZDBhYjtcbn1cblxuLyogQ29tbWVudC5TcGVjaWFsICovXG4uaGlnaGxpZ2h0IC5nZSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyogR2VuZXJpYy5FbXBoICovXG4uaGlnaGxpZ2h0IC5ncyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKiBHZW5lcmljLlN0cm9uZyAqL1xuLmhpZ2hsaWdodCAua2Mge1xuICBjb2xvcjogI2ZmYTA3YTtcbn1cblxuLyogS2V5d29yZC5Db25zdGFudCAqL1xuLmhpZ2hsaWdodCAua2Qge1xuICBjb2xvcjogIzAwZTBlMDtcbn1cblxuLyogS2V5d29yZC5EZWNsYXJhdGlvbiAqL1xuLmhpZ2hsaWdodCAua24ge1xuICBjb2xvcjogI2Y5MjY3Mjtcbn1cblxuLyogS2V5d29yZC5OYW1lc3BhY2UgKi9cbi5oaWdobGlnaHQgLmtwIHtcbiAgY29sb3I6ICMwMGUwZTA7XG59XG5cbi8qIEtleXdvcmQuUHNldWRvICovXG4uaGlnaGxpZ2h0IC5rciB7XG4gIGNvbG9yOiAjMDBlMGUwO1xufVxuXG4vKiBLZXl3b3JkLlJlc2VydmVkICovXG4uaGlnaGxpZ2h0IC5rdCB7XG4gIGNvbG9yOiAjMDBlMGUwO1xufVxuXG4vKiBLZXl3b3JkLlR5cGUgKi9cbi5oaWdobGlnaHQgLmxkIHtcbiAgY29sb3I6ICNmZmQ3MDA7XG59XG5cbi8qIExpdGVyYWwuRGF0ZSAqL1xuLmhpZ2hsaWdodCAubSB7XG4gIGNvbG9yOiAjYWU4MWZmO1xufVxuXG4vKiBMaXRlcmFsLk51bWJlciAqL1xuLmhpZ2hsaWdodCAucyB7XG4gIGNvbG9yOiAjZmZkNzAwO1xufVxuXG4vKiBMaXRlcmFsLlN0cmluZyAqL1xuLmhpZ2hsaWdodCAubmEge1xuICBjb2xvcjogI2ZmZDcwMDtcbn1cblxuLyogTmFtZS5BdHRyaWJ1dGUgKi9cbi5oaWdobGlnaHQgLm5iIHtcbiAgY29sb3I6ICNmZWZlZmU7XG59XG5cbi8qIE5hbWUuQnVpbHRpbiAqL1xuLmhpZ2hsaWdodCAubmMge1xuICBjb2xvcjogI2ZmZDcwMDtcbn1cblxuLyogTmFtZS5DbGFzcyAqL1xuLmhpZ2hsaWdodCAubm8ge1xuICBjb2xvcjogIzAwZTBlMDtcbn1cblxuLyogTmFtZS5Db25zdGFudCAqL1xuLmhpZ2hsaWdodCAubmQge1xuICBjb2xvcjogI2ZmZDcwMDtcbn1cblxuLyogTmFtZS5EZWNvcmF0b3IgKi9cbi5oaWdobGlnaHQgLm5pIHtcbiAgY29sb3I6ICNmZWZlZmU7XG59XG5cbi8qIE5hbWUuRW50aXR5ICovXG4uaGlnaGxpZ2h0IC5uZSB7XG4gIGNvbG9yOiAjZmZkNzAwO1xufVxuXG4vKiBOYW1lLkV4Y2VwdGlvbiAqL1xuLmhpZ2hsaWdodCAubmYge1xuICBjb2xvcjogI2ZmZDcwMDtcbn1cblxuLyogTmFtZS5GdW5jdGlvbiAqL1xuLmhpZ2hsaWdodCAubmwge1xuICBjb2xvcjogI2ZlZmVmZTtcbn1cblxuLyogTmFtZS5MYWJlbCAqL1xuLmhpZ2hsaWdodCAubm4ge1xuICBjb2xvcjogI2ZlZmVmZTtcbn1cblxuLyogTmFtZS5OYW1lc3BhY2UgKi9cbi5oaWdobGlnaHQgLm54IHtcbiAgY29sb3I6ICNmZmQ3MDA7XG59XG5cbi8qIE5hbWUuT3RoZXIgKi9cbi5oaWdobGlnaHQgLnB5IHtcbiAgY29sb3I6ICNmZmEwN2E7XG59XG5cbi8qIE5hbWUuUHJvcGVydHkgKi9cbi5oaWdobGlnaHQgLm50IHtcbiAgY29sb3I6ICNmOTI2NzI7XG59XG5cbi8qIE5hbWUuVGFnICovXG4uaGlnaGxpZ2h0IC5udiB7XG4gIGNvbG9yOiAjZmZhMDdhO1xufVxuXG4vKiBOYW1lLlZhcmlhYmxlICovXG4uaGlnaGxpZ2h0IC5vdyB7XG4gIGNvbG9yOiAjZjkyNjcyO1xufVxuXG4vKiBPcGVyYXRvci5Xb3JkICovXG4uaGlnaGxpZ2h0IC53IHtcbiAgY29sb3I6ICNmZWZlZmU7XG59XG5cbi8qIFRleHQuV2hpdGVzcGFjZSAqL1xuLmhpZ2hsaWdodCAubWYge1xuICBjb2xvcjogI2FlODFmZjtcbn1cblxuLyogTGl0ZXJhbC5OdW1iZXIuRmxvYXQgKi9cbi5oaWdobGlnaHQgLm1oIHtcbiAgY29sb3I6ICNhZTgxZmY7XG59XG5cbi8qIExpdGVyYWwuTnVtYmVyLkhleCAqL1xuLmhpZ2hsaWdodCAubWkge1xuICBjb2xvcjogI2FlODFmZjtcbn1cblxuLyogTGl0ZXJhbC5OdW1iZXIuSW50ZWdlciAqL1xuLmhpZ2hsaWdodCAubW8ge1xuICBjb2xvcjogI2FlODFmZjtcbn1cblxuLyogTGl0ZXJhbC5OdW1iZXIuT2N0ICovXG4uaGlnaGxpZ2h0IC5zYiB7XG4gIGNvbG9yOiAjYWJlMzM4O1xufVxuXG4vKiBMaXRlcmFsLlN0cmluZy5CYWNrdGljayAqL1xuLmhpZ2hsaWdodCAuc2Mge1xuICBjb2xvcjogI2FiZTMzODtcbn1cblxuLyogTGl0ZXJhbC5TdHJpbmcuQ2hhciAqL1xuLmhpZ2hsaWdodCAuc2Qge1xuICBjb2xvcjogI2FiZTMzODtcbn1cblxuLyogTGl0ZXJhbC5TdHJpbmcuRG9jICovXG4uaGlnaGxpZ2h0IC5zMiB7XG4gIGNvbG9yOiAjYWJlMzM4O1xufVxuXG4vKiBMaXRlcmFsLlN0cmluZy5Eb3VibGUgKi9cbi5oaWdobGlnaHQgLnNlIHtcbiAgY29sb3I6ICNhZTgxZmY7XG59XG5cbi8qIExpdGVyYWwuU3RyaW5nLkVzY2FwZSAqL1xuLmhpZ2hsaWdodCAuc2gge1xuICBjb2xvcjogI2FiZTMzODtcbn1cblxuLyogTGl0ZXJhbC5TdHJpbmcuSGVyZWRvYyAqL1xuLmhpZ2hsaWdodCAuc2kge1xuICBjb2xvcjogI2FiZTMzODtcbn1cblxuLyogTGl0ZXJhbC5TdHJpbmcuSW50ZXJwb2wgKi9cbi5oaWdobGlnaHQgLnN4IHtcbiAgY29sb3I6ICNhYmUzMzg7XG59XG5cbi8qIExpdGVyYWwuU3RyaW5nLk90aGVyICovXG4uaGlnaGxpZ2h0IC5zciB7XG4gIGNvbG9yOiAjYWJlMzM4O1xufVxuXG4vKiBMaXRlcmFsLlN0cmluZy5SZWdleCAqL1xuLmhpZ2hsaWdodCAuczEge1xuICBjb2xvcjogI2FiZTMzODtcbn1cblxuLyogTGl0ZXJhbC5TdHJpbmcuU2luZ2xlICovXG4uaGlnaGxpZ2h0IC5zcyB7XG4gIGNvbG9yOiAjZmZhMDdhO1xufVxuXG4vKiBMaXRlcmFsLlN0cmluZy5TeW1ib2wgKi9cbi5oaWdobGlnaHQgLmJwIHtcbiAgY29sb3I6ICNmZWZlZmU7XG59XG5cbi8qIE5hbWUuQnVpbHRpbi5Qc2V1ZG8gKi9cbi5oaWdobGlnaHQgLnZjIHtcbiAgY29sb3I6ICNmZWZlZmU7XG59XG5cbi8qIE5hbWUuVmFyaWFibGUuQ2xhc3MgKi9cbi5oaWdobGlnaHQgLnZnIHtcbiAgY29sb3I6ICNmZWZlZmU7XG59XG5cbi8qIE5hbWUuVmFyaWFibGUuR2xvYmFsICovXG4uaGlnaGxpZ2h0IC52aSB7XG4gIGNvbG9yOiAjZmVmZWZlO1xufVxuXG4vKiBOYW1lLlZhcmlhYmxlLkluc3RhbmNlICovXG4uaGlnaGxpZ2h0IC5pbCB7XG4gIGNvbG9yOiAjYWU4MWZmO1xufVxuXG4vKiBMaXRlcmFsLk51bWJlci5JbnRlZ2VyLkxvbmcgKi9cbi8qIEdlbmVyaWMgSGVhZGluZyAmIERpZmYgSGVhZGVyICovXG4uaGlnaGxpZ2h0IC5ndSB7XG4gIGNvbG9yOiAjZDRkMGFiO1xufVxuXG4vKiBHZW5lcmljLlN1YmhlYWRpbmcgJiBEaWZmIFVuaWZpZWQvQ29tbWVudD8gKi9cbi5oaWdobGlnaHQgLmdkIHtcbiAgY29sb3I6ICNmZmEwN2E7XG59XG5cbi8qIEdlbmVyaWMuRGVsZXRlZCAmIERpZmYgRGVsZXRlZCAqL1xuLmhpZ2hsaWdodCAuZ2kge1xuICBjb2xvcjogI2ZmZDcwMDtcbn1cblxuLyogR2VuZXJpYy5JbnNlcnRlZCAmIERpZmYgSW5zZXJ0ZWQgKi9cbjpyb290IHtcbiAgLS1jb2xvci1ibGFjazogaHNsKDAsIDAlLCAxMyUpO1xuICAtLWNvbG9yLWJsYWNrLS1saWdodGVuOiBoc2woMCwgMCUsIDUwJSk7XG4gIC0tY29sb3ItcHJpbWFyeTogaHNsKDQxLCA4NSUsIDUyJSk7XG4gIC0tY29sb3ItcHJpbWFyeS0tbGlnaHRlbjogaHNsKDQxLCA4NSUsIDg1JSk7XG4gIC0tY29sb3Itd2hpdGU6IGhzbCgwLCAwJSwgMTAwJSk7XG4gIC0tY29sb3Itd2hpdGUtLWRhcmtlbjogaHNsKDAsIDAlLCA5NSUpO1xufVxuXG5bZGF0YS10aGVtZT1cInRoZW1lLWRlZmF1bHRcIl0gW2RhdGEtdG9nZ2xlLXRoZW1lPVwidGhlbWUtZGVmYXVsdFwiXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbltkYXRhLXRoZW1lPVwidGhlbWUtZGFya1wiXSB7XG4gIC0tY29sb3ItYmxhY2s6IGhzbCgwLCAwJSwgMTAwJSk7XG4gIC0tY29sb3Itd2hpdGU6IGhzbCgwLCAwJSwgMTMlKTtcbiAgLS1jb2xvci13aGl0ZS0tZGFya2VuOiBoc2woMCwgMCUsIDE4JSk7XG4gIC0tY29sb3ItcHJpbWFyeS0tbGlnaHRlbjogaHNsKDQxLCA4NSUsIDQwJSk7XG59XG5cbltkYXRhLXRoZW1lPVwidGhlbWUtZGFya1wiXSBbZGF0YS10b2dnbGUtdGhlbWU9XCJ0aGVtZS1kYXJrXCJdIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuQG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaykge1xuICA6cm9vdCB7XG4gICAgLS1jb2xvci1ibGFjazogaHNsKDAsIDAlLCAxMDAlKTtcbiAgICAtLWNvbG9yLXdoaXRlOiBoc2woMCwgMCUsIDEzJSk7XG4gICAgLS1jb2xvci13aGl0ZS0tZGFya2VuOiBoc2woMCwgMCUsIDE4JSk7XG4gICAgLS1jb2xvci1wcmltYXJ5LS1saWdodGVuOiBoc2woNDEsIDg1JSwgNDAlKTtcbiAgfVxuICBbZGF0YS10b2dnbGUtdGhlbWU9XCJ0aGVtZS1kYXJrXCJdIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFNhbnMtU2VyaWY7XG4gIGNvbG9yOiB2YXIoLS1jb2xvci1ibGFjayk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci13aGl0ZSk7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi5wYWdlLXdyYXBwZXIge1xuICBtYXgtd2lkdGg6IDc1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMXJlbTtcbn1cblxuZGl2LmhpZ2hsaWdodCB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJiMmIyYjtcbiAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxucCBjb2RlLFxubGkgY29kZSxcbnRhYmxlIGNvZGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1wcmltYXJ5LS1saWdodGVuKTtcbiAgcGFkZGluZzogMCAwLjJyZW07XG59XG5cbmEge1xuICBjb2xvcjogdmFyKC0tY29sb3ItcHJpbWFyeSk7XG59XG5cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXByaW1hcnkpO1xuICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcbiAgYm9yZGVyOiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmJsb2NrcXVvdGUge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGJvcmRlci1sZWZ0OiA2cHggc29saWQgdmFyKC0tY29sb3ItcHJpbWFyeSk7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDFyZW07XG59XG5cbmhyIHtcbiAgYm9yZGVyOiAwO1xuICBoZWlnaHQ6IDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYmxhY2stLWxpZ2h0ZW4pO1xufVxuXG50YWJsZSB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxudGFibGUgdGQsXG50YWJsZSB0aCB7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbn1cblxudGFibGUgdGJvZHkgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3Itd2hpdGUtLWRhcmtlbik7XG59XG5cbnRhYmxlLFxudGgsXG50ZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbG9yLWJsYWNrLS1saWdodGVuKTtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cblxuLnBvc3QtaGVhZGVyIC5wb3N0LW1ldGEge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xufVxuXG4ucGFnZS1oZWFkZXIge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tY29sb3ItYmxhY2stLWxpZ2h0ZW4pO1xufVxuXG4ucGFnZS1oZWFkZXIgLnNpdGUtdGl0bGUge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgY29sb3I6IHZhcigtLWNvbG9yLWJsYWNrKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuZm9vdGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0tY29sb3ItYmxhY2stLWxpZ2h0ZW4pO1xuICBtYXJnaW4tdG9wOiAycmVtO1xufVxuXG5mb290ZXIgLmxpbmtzIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHBhZGRpbmctYm90dG9tOiAycmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5mb290ZXIgLmxpbmtzID4gbGkge1xuICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC41cmVtO1xufVxuXG5mb290ZXIgLmxpbmtzID4gbGk6YWZ0ZXIge1xuICBjb250ZW50OiBcInxcIjtcbiAgcGFkZGluZy1sZWZ0OiAxcmVtO1xufVxuXG5mb290ZXIgLmxpbmtzID4gbGk6bnRoLWxhc3QtY2hpbGQoLW4gKyAxKSB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG59XG5cbmZvb3RlciAubGlua3MgPiBsaTpudGgtbGFzdC1jaGlsZCgtbiArIDEpOmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmhvbWUgaDIge1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBmb250LXNpemU6IDEuM3JlbTtcbn1cblxuLmhvbWUgdWwge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuIiwiLmhpZ2hsaWdodCBwcmUgeyBiYWNrZ3JvdW5kLWNvbG9yOiAjMmIyYjJiOyBjb2xvcjogI2ZmZmZmZjsgfVxyXG4uaGlnaGxpZ2h0IC5obGwgeyBiYWNrZ3JvdW5kLWNvbG9yOiAjMmIyYjJiOyB9XHJcbi5oaWdobGlnaHQgLmMgeyBjb2xvcjogI2Q0ZDBhYiB9IC8qIENvbW1lbnQgKi9cclxuLmhpZ2hsaWdodCAuZXJyIHsgY29sb3I6ICNmZmEwN2E7IGJhY2tncm91bmQtY29sb3I6ICMxZTAwMTAgfSAvKiBFcnJvciAqL1xyXG4uaGlnaGxpZ2h0IC5rIHsgY29sb3I6ICMwMGUwZTAgfSAvKiBLZXl3b3JkICovXHJcbi5oaWdobGlnaHQgLmwgeyBjb2xvcjogI2FlODFmZiB9IC8qIExpdGVyYWwgKi9cclxuLmhpZ2hsaWdodCAubiB7IGNvbG9yOiAjZmVmZWZlIH0gLyogTmFtZSAqL1xyXG4uaGlnaGxpZ2h0IC5vIHsgY29sb3I6ICNmOTI2NzIgfSAvKiBPcGVyYXRvciAqL1xyXG4uaGlnaGxpZ2h0IC5wIHsgY29sb3I6ICNmZWZlZmUgfSAvKiBQdW5jdHVhdGlvbiAqL1xyXG4uaGlnaGxpZ2h0IC5jbSB7IGNvbG9yOiAjZDRkMGFiIH0gLyogQ29tbWVudC5NdWx0aWxpbmUgKi9cclxuLmhpZ2hsaWdodCAuY3AgeyBjb2xvcjogI2Q0ZDBhYiB9IC8qIENvbW1lbnQuUHJlcHJvYyAqL1xyXG4uaGlnaGxpZ2h0IC5jMSB7IGNvbG9yOiAjZDRkMGFiIH0gLyogQ29tbWVudC5TaW5nbGUgKi9cclxuLmhpZ2hsaWdodCAuY3MgeyBjb2xvcjogI2Q0ZDBhYiB9IC8qIENvbW1lbnQuU3BlY2lhbCAqL1xyXG4uaGlnaGxpZ2h0IC5nZSB7IGZvbnQtc3R5bGU6IGl0YWxpYyB9IC8qIEdlbmVyaWMuRW1waCAqL1xyXG4uaGlnaGxpZ2h0IC5ncyB7IGZvbnQtd2VpZ2h0OiBib2xkIH0gLyogR2VuZXJpYy5TdHJvbmcgKi9cclxuLmhpZ2hsaWdodCAua2MgeyBjb2xvcjogI2ZmYTA3YSB9IC8qIEtleXdvcmQuQ29uc3RhbnQgKi9cclxuLmhpZ2hsaWdodCAua2QgeyBjb2xvcjogIzAwZTBlMCB9IC8qIEtleXdvcmQuRGVjbGFyYXRpb24gKi9cclxuLmhpZ2hsaWdodCAua24geyBjb2xvcjogI2Y5MjY3MiB9IC8qIEtleXdvcmQuTmFtZXNwYWNlICovXHJcbi5oaWdobGlnaHQgLmtwIHsgY29sb3I6ICMwMGUwZTAgfSAvKiBLZXl3b3JkLlBzZXVkbyAqL1xyXG4uaGlnaGxpZ2h0IC5rciB7IGNvbG9yOiAjMDBlMGUwIH0gLyogS2V5d29yZC5SZXNlcnZlZCAqL1xyXG4uaGlnaGxpZ2h0IC5rdCB7IGNvbG9yOiAjMDBlMGUwIH0gLyogS2V5d29yZC5UeXBlICovXHJcbi5oaWdobGlnaHQgLmxkIHsgY29sb3I6ICNmZmQ3MDAgfSAvKiBMaXRlcmFsLkRhdGUgKi9cclxuLmhpZ2hsaWdodCAubSB7IGNvbG9yOiAjYWU4MWZmIH0gLyogTGl0ZXJhbC5OdW1iZXIgKi9cclxuLmhpZ2hsaWdodCAucyB7IGNvbG9yOiAjZmZkNzAwIH0gLyogTGl0ZXJhbC5TdHJpbmcgKi9cclxuLmhpZ2hsaWdodCAubmEgeyBjb2xvcjogI2ZmZDcwMCB9IC8qIE5hbWUuQXR0cmlidXRlICovXHJcbi5oaWdobGlnaHQgLm5iIHsgY29sb3I6ICNmZWZlZmUgfSAvKiBOYW1lLkJ1aWx0aW4gKi9cclxuLmhpZ2hsaWdodCAubmMgeyBjb2xvcjogI2ZmZDcwMCB9IC8qIE5hbWUuQ2xhc3MgKi9cclxuLmhpZ2hsaWdodCAubm8geyBjb2xvcjogIzAwZTBlMCB9IC8qIE5hbWUuQ29uc3RhbnQgKi9cclxuLmhpZ2hsaWdodCAubmQgeyBjb2xvcjogI2ZmZDcwMCB9IC8qIE5hbWUuRGVjb3JhdG9yICovXHJcbi5oaWdobGlnaHQgLm5pIHsgY29sb3I6ICNmZWZlZmUgfSAvKiBOYW1lLkVudGl0eSAqL1xyXG4uaGlnaGxpZ2h0IC5uZSB7IGNvbG9yOiAjZmZkNzAwIH0gLyogTmFtZS5FeGNlcHRpb24gKi9cclxuLmhpZ2hsaWdodCAubmYgeyBjb2xvcjogI2ZmZDcwMCB9IC8qIE5hbWUuRnVuY3Rpb24gKi9cclxuLmhpZ2hsaWdodCAubmwgeyBjb2xvcjogI2ZlZmVmZSB9IC8qIE5hbWUuTGFiZWwgKi9cclxuLmhpZ2hsaWdodCAubm4geyBjb2xvcjogI2ZlZmVmZSB9IC8qIE5hbWUuTmFtZXNwYWNlICovXHJcbi5oaWdobGlnaHQgLm54IHsgY29sb3I6ICNmZmQ3MDAgfSAvKiBOYW1lLk90aGVyICovXHJcbi5oaWdobGlnaHQgLnB5IHsgY29sb3I6ICNmZmEwN2EgfSAvKiBOYW1lLlByb3BlcnR5ICovXHJcbi5oaWdobGlnaHQgLm50IHsgY29sb3I6ICNmOTI2NzIgfSAvKiBOYW1lLlRhZyAqL1xyXG4uaGlnaGxpZ2h0IC5udiB7IGNvbG9yOiAjZmZhMDdhIH0gLyogTmFtZS5WYXJpYWJsZSAqL1xyXG4uaGlnaGxpZ2h0IC5vdyB7IGNvbG9yOiAjZjkyNjcyIH0gLyogT3BlcmF0b3IuV29yZCAqL1xyXG4uaGlnaGxpZ2h0IC53IHsgY29sb3I6ICNmZWZlZmUgfSAvKiBUZXh0LldoaXRlc3BhY2UgKi9cclxuLmhpZ2hsaWdodCAubWYgeyBjb2xvcjogI2FlODFmZiB9IC8qIExpdGVyYWwuTnVtYmVyLkZsb2F0ICovXHJcbi5oaWdobGlnaHQgLm1oIHsgY29sb3I6ICNhZTgxZmYgfSAvKiBMaXRlcmFsLk51bWJlci5IZXggKi9cclxuLmhpZ2hsaWdodCAubWkgeyBjb2xvcjogI2FlODFmZiB9IC8qIExpdGVyYWwuTnVtYmVyLkludGVnZXIgKi9cclxuLmhpZ2hsaWdodCAubW8geyBjb2xvcjogI2FlODFmZiB9IC8qIExpdGVyYWwuTnVtYmVyLk9jdCAqL1xyXG4uaGlnaGxpZ2h0IC5zYiB7IGNvbG9yOiAjYWJlMzM4IH0gLyogTGl0ZXJhbC5TdHJpbmcuQmFja3RpY2sgKi9cclxuLmhpZ2hsaWdodCAuc2MgeyBjb2xvcjogI2FiZTMzOCB9IC8qIExpdGVyYWwuU3RyaW5nLkNoYXIgKi9cclxuLmhpZ2hsaWdodCAuc2QgeyBjb2xvcjogI2FiZTMzOCB9IC8qIExpdGVyYWwuU3RyaW5nLkRvYyAqL1xyXG4uaGlnaGxpZ2h0IC5zMiB7IGNvbG9yOiAjYWJlMzM4IH0gLyogTGl0ZXJhbC5TdHJpbmcuRG91YmxlICovXHJcbi5oaWdobGlnaHQgLnNlIHsgY29sb3I6ICNhZTgxZmYgfSAvKiBMaXRlcmFsLlN0cmluZy5Fc2NhcGUgKi9cclxuLmhpZ2hsaWdodCAuc2ggeyBjb2xvcjogI2FiZTMzOCB9IC8qIExpdGVyYWwuU3RyaW5nLkhlcmVkb2MgKi9cclxuLmhpZ2hsaWdodCAuc2kgeyBjb2xvcjogI2FiZTMzOCB9IC8qIExpdGVyYWwuU3RyaW5nLkludGVycG9sICovXHJcbi5oaWdobGlnaHQgLnN4IHsgY29sb3I6ICNhYmUzMzggfSAvKiBMaXRlcmFsLlN0cmluZy5PdGhlciAqL1xyXG4uaGlnaGxpZ2h0IC5zciB7IGNvbG9yOiAjYWJlMzM4IH0gLyogTGl0ZXJhbC5TdHJpbmcuUmVnZXggKi9cclxuLmhpZ2hsaWdodCAuczEgeyBjb2xvcjogI2FiZTMzOCB9IC8qIExpdGVyYWwuU3RyaW5nLlNpbmdsZSAqL1xyXG4uaGlnaGxpZ2h0IC5zcyB7IGNvbG9yOiAjZmZhMDdhIH0gLyogTGl0ZXJhbC5TdHJpbmcuU3ltYm9sICovXHJcbi5oaWdobGlnaHQgLmJwIHsgY29sb3I6ICNmZWZlZmUgfSAvKiBOYW1lLkJ1aWx0aW4uUHNldWRvICovXHJcbi5oaWdobGlnaHQgLnZjIHsgY29sb3I6ICNmZWZlZmUgfSAvKiBOYW1lLlZhcmlhYmxlLkNsYXNzICovXHJcbi5oaWdobGlnaHQgLnZnIHsgY29sb3I6ICNmZWZlZmUgfSAvKiBOYW1lLlZhcmlhYmxlLkdsb2JhbCAqL1xyXG4uaGlnaGxpZ2h0IC52aSB7IGNvbG9yOiAjZmVmZWZlIH0gLyogTmFtZS5WYXJpYWJsZS5JbnN0YW5jZSAqL1xyXG4uaGlnaGxpZ2h0IC5pbCB7IGNvbG9yOiAjYWU4MWZmIH0gLyogTGl0ZXJhbC5OdW1iZXIuSW50ZWdlci5Mb25nICovXHJcblxyXG4uaGlnaGxpZ2h0IC5naCB7IH0gLyogR2VuZXJpYyBIZWFkaW5nICYgRGlmZiBIZWFkZXIgKi9cclxuLmhpZ2hsaWdodCAuZ3UgeyBjb2xvcjogI2Q0ZDBhYjsgfSAvKiBHZW5lcmljLlN1YmhlYWRpbmcgJiBEaWZmIFVuaWZpZWQvQ29tbWVudD8gKi9cclxuLmhpZ2hsaWdodCAuZ2QgeyBjb2xvcjogI2ZmYTA3YTsgfSAvKiBHZW5lcmljLkRlbGV0ZWQgJiBEaWZmIERlbGV0ZWQgKi9cclxuLmhpZ2hsaWdodCAuZ2kgeyBjb2xvcjogI2ZmZDcwMDsgfSAvKiBHZW5lcmljLkluc2VydGVkICYgRGlmZiBJbnNlcnRlZCAqLyIsIkBpbXBvcnQgXCJ2ZW5kb3Ivbm9ybWFsaXplXCI7XG5AaW1wb3J0IFwidmVuZG9yL2hpZ2hsaWdodC10aGVtZVwiO1xuXG46cm9vdCB7XG4gIC0tY29sb3ItYmxhY2s6IGhzbCgwLCAwJSwgMTMlKTtcbiAgLS1jb2xvci1ibGFjay0tbGlnaHRlbjogaHNsKDAsIDAlLCA1MCUpO1xuICAtLWNvbG9yLXByaW1hcnk6IGhzbCg0MSwgODUlLCA1MiUpO1xuICAtLWNvbG9yLXByaW1hcnktLWxpZ2h0ZW46IGhzbCg0MSwgODUlLCA4NSUpO1xuICAtLWNvbG9yLXdoaXRlOiBoc2woMCwgMCUsIDEwMCUpO1xuICAtLWNvbG9yLXdoaXRlLS1kYXJrZW46IGhzbCgwLCAwJSwgOTUlKTtcbn1cblxuW2RhdGEtdGhlbWU9XCJ0aGVtZS1kZWZhdWx0XCJdIHtcbiAgW2RhdGEtdG9nZ2xlLXRoZW1lPVwidGhlbWUtZGVmYXVsdFwiXSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG5bZGF0YS10aGVtZT1cInRoZW1lLWRhcmtcIl0ge1xuICAtLWNvbG9yLWJsYWNrOiBoc2woMCwgMCUsIDEwMCUpO1xuICAtLWNvbG9yLXdoaXRlOiBoc2woMCwgMCUsIDEzJSk7XG4gIC0tY29sb3Itd2hpdGUtLWRhcmtlbjogaHNsKDAsIDAlLCAxOCUpO1xuICAtLWNvbG9yLXByaW1hcnktLWxpZ2h0ZW46IGhzbCg0MSwgODUlLCA0MCUpO1xuXG4gIFtkYXRhLXRvZ2dsZS10aGVtZT1cInRoZW1lLWRhcmtcIl0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuQG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaykge1xuICA6cm9vdCB7XG4gICAgLS1jb2xvci1ibGFjazogaHNsKDAsIDAlLCAxMDAlKTtcbiAgICAtLWNvbG9yLXdoaXRlOiBoc2woMCwgMCUsIDEzJSk7XG4gICAgLS1jb2xvci13aGl0ZS0tZGFya2VuOiBoc2woMCwgMCUsIDE4JSk7XG4gICAgLS1jb2xvci1wcmltYXJ5LS1saWdodGVuOiBoc2woNDEsIDg1JSwgNDAlKTtcbiAgfVxuICBcbiAgW2RhdGEtdG9nZ2xlLXRoZW1lPVwidGhlbWUtZGFya1wiXSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG5cbiRibGFjazogdmFyKC0tY29sb3ItYmxhY2spO1xuJGJsYWNrLWxpZ2h0ZW46IHZhcigtLWNvbG9yLWJsYWNrLS1saWdodGVuKTtcbiRwcmltYXJ5OiB2YXIoLS1jb2xvci1wcmltYXJ5KTtcbiRwcmltYXJ5LWxpZ2h0ZW46IHZhcigtLWNvbG9yLXByaW1hcnktLWxpZ2h0ZW4pO1xuJHdoaXRlOiB2YXIoLS1jb2xvci13aGl0ZSk7XG4kd2hpdGUtZGFya2VuOiB2YXIoLS1jb2xvci13aGl0ZS0tZGFya2VuKTtcblxuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogU2Fucy1TZXJpZjtcbiAgY29sb3I6ICRibGFjaztcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLnBhZ2Utd3JhcHBlciB7XG4gIG1heC13aWR0aDogNzUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxcmVtO1xufVxuXG5kaXYuaGlnaGxpZ2h0IHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBoc2woMCwgMCUsIDE3JSk7IC8vVG8gZml0IGhpZ2hsaWdodCB0aGVtZSBmb3Igbm93XG4gIHBhZGRpbmctbGVmdDogMXJlbTtcbiAgcGFkZGluZy1yaWdodDogMXJlbTtcbn1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbnAgY29kZSxcbmxpIGNvZGUsXG50YWJsZSBjb2RlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktbGlnaHRlbjtcbiAgcGFkZGluZzogMCAwLjJyZW07XG59XG5cbmEge1xuICBjb2xvcjogJHByaW1hcnk7XG59XG5cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5O1xuICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcbiAgYm9yZGVyOiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmJsb2NrcXVvdGUge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGJvcmRlci1sZWZ0OiA2cHggc29saWQgJHByaW1hcnk7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDFyZW07XG59XG5cbmhyIHtcbiAgYm9yZGVyOiAwO1xuICBoZWlnaHQ6IDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrLWxpZ2h0ZW47XG59XG5cbnRhYmxlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuXG4gIHRkLFxuICB0aCB7XG4gICAgcGFkZGluZzogMC41cmVtO1xuICB9XG5cbiAgdGJvZHkge1xuICAgIHRyIHtcbiAgICAgICY6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlLWRhcmtlbjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxudGFibGUsXG50aCxcbnRkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgJGJsYWNrLWxpZ2h0ZW47XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG59XG5cbi5wb3N0LWhlYWRlciB7XG4gIC5wb3N0LW1ldGEge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBmb250LXNpemU6IDAuOHJlbTtcbiAgfVxufVxuXG4ucGFnZS1oZWFkZXIge1xuICAuc2l0ZS10aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgY29sb3I6ICRibGFjaztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGJsYWNrLWxpZ2h0ZW47XG59XG5cbmZvb3RlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRibGFjay1saWdodGVuO1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICAubGlua3Mge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICAgICYgPiBsaSB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICAgICAgcGFkZGluZy1ib3R0b206IDAuNXJlbTtcblxuICAgICAgJjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwifFwiO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDFyZW07XG4gICAgICB9XG5cbiAgICAgICY6bnRoLWxhc3QtY2hpbGQoLW4gKyAxKSB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLmhvbWUge1xuICBoMiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBmb250LXNpemU6IDEuM3JlbTtcbiAgfVxuXG4gIHVsIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG59XG4iXX0= */
